// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

import (
	v1 "github.com/seal-io/walrus/pkg/apis/walruscore/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ResourceDefinitionLister helps list ResourceDefinitions.
// All objects returned here must be treated as read-only.
type ResourceDefinitionLister interface {
	// List lists all ResourceDefinitions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ResourceDefinition, err error)
	// ResourceDefinitions returns an object that can list and get ResourceDefinitions.
	ResourceDefinitions(namespace string) ResourceDefinitionNamespaceLister
	ResourceDefinitionListerExpansion
}

// resourceDefinitionLister implements the ResourceDefinitionLister interface.
type resourceDefinitionLister struct {
	indexer cache.Indexer
}

// NewResourceDefinitionLister returns a new ResourceDefinitionLister.
func NewResourceDefinitionLister(indexer cache.Indexer) ResourceDefinitionLister {
	return &resourceDefinitionLister{indexer: indexer}
}

// List lists all ResourceDefinitions in the indexer.
func (s *resourceDefinitionLister) List(selector labels.Selector) (ret []*v1.ResourceDefinition, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ResourceDefinition))
	})
	return ret, err
}

// ResourceDefinitions returns an object that can list and get ResourceDefinitions.
func (s *resourceDefinitionLister) ResourceDefinitions(namespace string) ResourceDefinitionNamespaceLister {
	return resourceDefinitionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ResourceDefinitionNamespaceLister helps list and get ResourceDefinitions.
// All objects returned here must be treated as read-only.
type ResourceDefinitionNamespaceLister interface {
	// List lists all ResourceDefinitions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ResourceDefinition, err error)
	// Get retrieves the ResourceDefinition from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.ResourceDefinition, error)
	ResourceDefinitionNamespaceListerExpansion
}

// resourceDefinitionNamespaceLister implements the ResourceDefinitionNamespaceLister
// interface.
type resourceDefinitionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ResourceDefinitions in the indexer for a given namespace.
func (s resourceDefinitionNamespaceLister) List(selector labels.Selector) (ret []*v1.ResourceDefinition, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ResourceDefinition))
	})
	return ret, err
}

// Get retrieves the ResourceDefinition from the indexer for a given namespace and name.
func (s resourceDefinitionNamespaceLister) Get(name string) (*v1.ResourceDefinition, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.SchemeResource("resourcedefinition"), name)
	}
	return obj.(*v1.ResourceDefinition), nil
}
