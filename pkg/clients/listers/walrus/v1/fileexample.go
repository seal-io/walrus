// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

import (
	v1 "github.com/seal-io/walrus/pkg/apis/walrus/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FileExampleLister helps list FileExamples.
// All objects returned here must be treated as read-only.
type FileExampleLister interface {
	// List lists all FileExamples in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.FileExample, err error)
	// FileExamples returns an object that can list and get FileExamples.
	FileExamples(namespace string) FileExampleNamespaceLister
	FileExampleListerExpansion
}

// fileExampleLister implements the FileExampleLister interface.
type fileExampleLister struct {
	indexer cache.Indexer
}

// NewFileExampleLister returns a new FileExampleLister.
func NewFileExampleLister(indexer cache.Indexer) FileExampleLister {
	return &fileExampleLister{indexer: indexer}
}

// List lists all FileExamples in the indexer.
func (s *fileExampleLister) List(selector labels.Selector) (ret []*v1.FileExample, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.FileExample))
	})
	return ret, err
}

// FileExamples returns an object that can list and get FileExamples.
func (s *fileExampleLister) FileExamples(namespace string) FileExampleNamespaceLister {
	return fileExampleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FileExampleNamespaceLister helps list and get FileExamples.
// All objects returned here must be treated as read-only.
type FileExampleNamespaceLister interface {
	// List lists all FileExamples in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.FileExample, err error)
	// Get retrieves the FileExample from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.FileExample, error)
	FileExampleNamespaceListerExpansion
}

// fileExampleNamespaceLister implements the FileExampleNamespaceLister
// interface.
type fileExampleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FileExamples in the indexer for a given namespace.
func (s fileExampleNamespaceLister) List(selector labels.Selector) (ret []*v1.FileExample, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.FileExample))
	})
	return ret, err
}

// Get retrieves the FileExample from the indexer for a given namespace and name.
func (s fileExampleNamespaceLister) Get(name string) (*v1.FileExample, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.SchemeResource("fileexample"), name)
	}
	return obj.(*v1.FileExample), nil
}
