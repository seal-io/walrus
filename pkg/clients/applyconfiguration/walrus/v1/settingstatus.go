// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

// SettingStatusApplyConfiguration represents an declarative configuration of the SettingStatus type for use
// with apply.
type SettingStatusApplyConfiguration struct {
	Description *string `json:"description,omitempty"`
	Hidden      *bool   `json:"hidden,omitempty"`
	Editable    *bool   `json:"editable,omitempty"`
	Sensitive   *bool   `json:"sensitive,omitempty"`
	Value       *string `json:"value,omitempty"`
}

// SettingStatusApplyConfiguration constructs an declarative configuration of the SettingStatus type for use with
// apply.
func SettingStatus() *SettingStatusApplyConfiguration {
	return &SettingStatusApplyConfiguration{}
}

// WithDescription sets the Description field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Description field is set to the value of the last call.
func (b *SettingStatusApplyConfiguration) WithDescription(value string) *SettingStatusApplyConfiguration {
	b.Description = &value
	return b
}

// WithHidden sets the Hidden field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Hidden field is set to the value of the last call.
func (b *SettingStatusApplyConfiguration) WithHidden(value bool) *SettingStatusApplyConfiguration {
	b.Hidden = &value
	return b
}

// WithEditable sets the Editable field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Editable field is set to the value of the last call.
func (b *SettingStatusApplyConfiguration) WithEditable(value bool) *SettingStatusApplyConfiguration {
	b.Editable = &value
	return b
}

// WithSensitive sets the Sensitive field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Sensitive field is set to the value of the last call.
func (b *SettingStatusApplyConfiguration) WithSensitive(value bool) *SettingStatusApplyConfiguration {
	b.Sensitive = &value
	return b
}

// WithValue sets the Value field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Value field is set to the value of the last call.
func (b *SettingStatusApplyConfiguration) WithValue(value string) *SettingStatusApplyConfiguration {
	b.Value = &value
	return b
}
