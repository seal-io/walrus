// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
)

// EnvironmentStatusApplyConfiguration represents an declarative configuration of the EnvironmentStatus type for use
// with apply.
type EnvironmentStatusApplyConfiguration struct {
	Project *string            `json:"project,omitempty"`
	Phase   *v1.NamespacePhase `json:"phase,omitempty"`
}

// EnvironmentStatusApplyConfiguration constructs an declarative configuration of the EnvironmentStatus type for use with
// apply.
func EnvironmentStatus() *EnvironmentStatusApplyConfiguration {
	return &EnvironmentStatusApplyConfiguration{}
}

// WithProject sets the Project field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Project field is set to the value of the last call.
func (b *EnvironmentStatusApplyConfiguration) WithProject(value string) *EnvironmentStatusApplyConfiguration {
	b.Project = &value
	return b
}

// WithPhase sets the Phase field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Phase field is set to the value of the last call.
func (b *EnvironmentStatusApplyConfiguration) WithPhase(value v1.NamespacePhase) *EnvironmentStatusApplyConfiguration {
	b.Phase = &value
	return b
}
