// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

// CSINodeSpecApplyConfiguration represents an declarative configuration of the CSINodeSpec type for use
// with apply.
type CSINodeSpecApplyConfiguration struct {
	Drivers []CSINodeDriverApplyConfiguration `json:"drivers,omitempty"`
}

// CSINodeSpecApplyConfiguration constructs an declarative configuration of the CSINodeSpec type for use with
// apply.
func CSINodeSpec() *CSINodeSpecApplyConfiguration {
	return &CSINodeSpecApplyConfiguration{}
}

// WithDrivers adds the given value to the Drivers field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Drivers field.
func (b *CSINodeSpecApplyConfiguration) WithDrivers(values ...*CSINodeDriverApplyConfiguration) *CSINodeSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithDrivers")
		}
		b.Drivers = append(b.Drivers, *values[i])
	}
	return b
}
