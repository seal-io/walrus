// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package fake

import (
	"context"

	v1 "github.com/seal-io/walrus/pkg/apis/walrus/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	testing "k8s.io/client-go/testing"
)

// FakeTemplateCompletions implements TemplateCompletionInterface
type FakeTemplateCompletions struct {
	Fake *FakeWalrusV1
	ns   string
}

var templatecompletionsResource = v1.SchemeGroupVersion.WithResource("templatecompletions")

var templatecompletionsKind = v1.SchemeGroupVersion.WithKind("TemplateCompletion")

// Create takes the representation of a templateCompletion and creates it.  Returns the server's representation of the templateCompletion, and an error, if there is any.
func (c *FakeTemplateCompletions) Create(ctx context.Context, templateCompletion *v1.TemplateCompletion, opts metav1.CreateOptions) (result *v1.TemplateCompletion, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewCreateAction(templatecompletionsResource, c.ns, templateCompletion), &v1.TemplateCompletion{})

	if obj == nil {
		return nil, err
	}
	return obj.(*v1.TemplateCompletion), err
}
