// SPDX-FileCopyrightText: 2023 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "seal". DO NOT EDIT.

package runtime

import (
	"time"

	"github.com/seal-io/seal/pkg/dao/model/connector"
	"github.com/seal-io/seal/pkg/dao/model/costreport"
	"github.com/seal-io/seal/pkg/dao/model/distributelock"
	"github.com/seal-io/seal/pkg/dao/model/environment"
	"github.com/seal-io/seal/pkg/dao/model/environmentconnectorrelationship"
	"github.com/seal-io/seal/pkg/dao/model/perspective"
	"github.com/seal-io/seal/pkg/dao/model/project"
	"github.com/seal-io/seal/pkg/dao/model/role"
	"github.com/seal-io/seal/pkg/dao/model/service"
	"github.com/seal-io/seal/pkg/dao/model/servicerelationship"
	"github.com/seal-io/seal/pkg/dao/model/serviceresource"
	"github.com/seal-io/seal/pkg/dao/model/serviceresourcerelationship"
	"github.com/seal-io/seal/pkg/dao/model/servicerevision"
	"github.com/seal-io/seal/pkg/dao/model/setting"
	"github.com/seal-io/seal/pkg/dao/model/subject"
	"github.com/seal-io/seal/pkg/dao/model/subjectrolerelationship"
	"github.com/seal-io/seal/pkg/dao/model/template"
	"github.com/seal-io/seal/pkg/dao/model/templateversion"
	"github.com/seal-io/seal/pkg/dao/model/token"
	"github.com/seal-io/seal/pkg/dao/model/variable"
	"github.com/seal-io/seal/pkg/dao/schema"
	"github.com/seal-io/seal/pkg/dao/types"
	"github.com/seal-io/seal/pkg/dao/types/crypto"
	"github.com/seal-io/seal/pkg/dao/types/object"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	connectorMixin := schema.Connector{}.Mixin()
	connectorMixinHooks0 := connectorMixin[0].Hooks()
	connectorMixinHooks1 := connectorMixin[1].Hooks()
	connectorHooks := schema.Connector{}.Hooks()
	connector.Hooks[0] = connectorMixinHooks0[0]
	connector.Hooks[1] = connectorMixinHooks1[0]
	connector.Hooks[2] = connectorMixinHooks1[1]
	connector.Hooks[3] = connectorHooks[0]
	connectorMixinInters1 := connectorMixin[1].Interceptors()
	connector.Interceptors[0] = connectorMixinInters1[0]
	connectorMixinFields0 := connectorMixin[0].Fields()
	_ = connectorMixinFields0
	connectorFields := schema.Connector{}.Fields()
	_ = connectorFields
	// connectorDescName is the schema descriptor for name field.
	connectorDescName := connectorMixinFields0[1].Descriptor()
	// connector.NameValidator is a validator for the "name" field. It is called by the builders before save.
	connector.NameValidator = connectorDescName.Validators[0].(func(string) error)
	// connectorDescLabels is the schema descriptor for labels field.
	connectorDescLabels := connectorMixinFields0[3].Descriptor()
	// connector.DefaultLabels holds the default value on creation for the labels field.
	connector.DefaultLabels = connectorDescLabels.Default.(map[string]string)
	// connectorDescAnnotations is the schema descriptor for annotations field.
	connectorDescAnnotations := connectorMixinFields0[4].Descriptor()
	// connector.DefaultAnnotations holds the default value on creation for the annotations field.
	connector.DefaultAnnotations = connectorDescAnnotations.Default.(map[string]string)
	// connectorDescCreateTime is the schema descriptor for create_time field.
	connectorDescCreateTime := connectorMixinFields0[5].Descriptor()
	// connector.DefaultCreateTime holds the default value on creation for the create_time field.
	connector.DefaultCreateTime = connectorDescCreateTime.Default.(func() time.Time)
	// connectorDescUpdateTime is the schema descriptor for update_time field.
	connectorDescUpdateTime := connectorMixinFields0[6].Descriptor()
	// connector.DefaultUpdateTime holds the default value on creation for the update_time field.
	connector.DefaultUpdateTime = connectorDescUpdateTime.Default.(func() time.Time)
	// connector.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	connector.UpdateDefaultUpdateTime = connectorDescUpdateTime.UpdateDefault.(func() time.Time)
	// connectorDescType is the schema descriptor for type field.
	connectorDescType := connectorFields[0].Descriptor()
	// connector.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	connector.TypeValidator = connectorDescType.Validators[0].(func(string) error)
	// connectorDescConfigVersion is the schema descriptor for config_version field.
	connectorDescConfigVersion := connectorFields[1].Descriptor()
	// connector.ConfigVersionValidator is a validator for the "config_version" field. It is called by the builders before save.
	connector.ConfigVersionValidator = connectorDescConfigVersion.Validators[0].(func(string) error)
	// connectorDescConfigData is the schema descriptor for config_data field.
	connectorDescConfigData := connectorFields[2].Descriptor()
	// connector.DefaultConfigData holds the default value on creation for the config_data field.
	connector.DefaultConfigData = connectorDescConfigData.Default.(crypto.Properties)
	// connectorDescCategory is the schema descriptor for category field.
	connectorDescCategory := connectorFields[5].Descriptor()
	// connector.CategoryValidator is a validator for the "category" field. It is called by the builders before save.
	connector.CategoryValidator = connectorDescCategory.Validators[0].(func(string) error)
	costreportHooks := schema.CostReport{}.Hooks()
	costreport.Hooks[0] = costreportHooks[0]
	costreportFields := schema.CostReport{}.Fields()
	_ = costreportFields
	// costreportDescConnectorID is the schema descriptor for connector_id field.
	costreportDescConnectorID := costreportFields[3].Descriptor()
	// costreport.ConnectorIDValidator is a validator for the "connector_id" field. It is called by the builders before save.
	costreport.ConnectorIDValidator = costreportDescConnectorID.Validators[0].(func(string) error)
	// costreportDescPvs is the schema descriptor for pvs field.
	costreportDescPvs := costreportFields[13].Descriptor()
	// costreport.DefaultPvs holds the default value on creation for the pvs field.
	costreport.DefaultPvs = costreportDescPvs.Default.(map[string]types.PVCost)
	// costreportDescLabels is the schema descriptor for labels field.
	costreportDescLabels := costreportFields[14].Descriptor()
	// costreport.DefaultLabels holds the default value on creation for the labels field.
	costreport.DefaultLabels = costreportDescLabels.Default.(map[string]string)
	// costreportDescTotalCost is the schema descriptor for totalCost field.
	costreportDescTotalCost := costreportFields[15].Descriptor()
	// costreport.DefaultTotalCost holds the default value on creation for the totalCost field.
	costreport.DefaultTotalCost = costreportDescTotalCost.Default.(float64)
	// costreport.TotalCostValidator is a validator for the "totalCost" field. It is called by the builders before save.
	costreport.TotalCostValidator = costreportDescTotalCost.Validators[0].(func(float64) error)
	// costreportDescCPUCost is the schema descriptor for cpu_cost field.
	costreportDescCPUCost := costreportFields[17].Descriptor()
	// costreport.DefaultCPUCost holds the default value on creation for the cpu_cost field.
	costreport.DefaultCPUCost = costreportDescCPUCost.Default.(float64)
	// costreport.CPUCostValidator is a validator for the "cpu_cost" field. It is called by the builders before save.
	costreport.CPUCostValidator = costreportDescCPUCost.Validators[0].(func(float64) error)
	// costreportDescCPUCoreRequest is the schema descriptor for cpu_core_request field.
	costreportDescCPUCoreRequest := costreportFields[18].Descriptor()
	// costreport.DefaultCPUCoreRequest holds the default value on creation for the cpu_core_request field.
	costreport.DefaultCPUCoreRequest = costreportDescCPUCoreRequest.Default.(float64)
	// costreport.CPUCoreRequestValidator is a validator for the "cpu_core_request" field. It is called by the builders before save.
	costreport.CPUCoreRequestValidator = costreportDescCPUCoreRequest.Validators[0].(func(float64) error)
	// costreportDescGpuCost is the schema descriptor for gpu_cost field.
	costreportDescGpuCost := costreportFields[19].Descriptor()
	// costreport.DefaultGpuCost holds the default value on creation for the gpu_cost field.
	costreport.DefaultGpuCost = costreportDescGpuCost.Default.(float64)
	// costreport.GpuCostValidator is a validator for the "gpu_cost" field. It is called by the builders before save.
	costreport.GpuCostValidator = costreportDescGpuCost.Validators[0].(func(float64) error)
	// costreportDescGpuCount is the schema descriptor for gpu_count field.
	costreportDescGpuCount := costreportFields[20].Descriptor()
	// costreport.DefaultGpuCount holds the default value on creation for the gpu_count field.
	costreport.DefaultGpuCount = costreportDescGpuCount.Default.(float64)
	// costreport.GpuCountValidator is a validator for the "gpu_count" field. It is called by the builders before save.
	costreport.GpuCountValidator = costreportDescGpuCount.Validators[0].(func(float64) error)
	// costreportDescRAMCost is the schema descriptor for ram_cost field.
	costreportDescRAMCost := costreportFields[21].Descriptor()
	// costreport.DefaultRAMCost holds the default value on creation for the ram_cost field.
	costreport.DefaultRAMCost = costreportDescRAMCost.Default.(float64)
	// costreport.RAMCostValidator is a validator for the "ram_cost" field. It is called by the builders before save.
	costreport.RAMCostValidator = costreportDescRAMCost.Validators[0].(func(float64) error)
	// costreportDescRAMByteRequest is the schema descriptor for ram_byte_request field.
	costreportDescRAMByteRequest := costreportFields[22].Descriptor()
	// costreport.DefaultRAMByteRequest holds the default value on creation for the ram_byte_request field.
	costreport.DefaultRAMByteRequest = costreportDescRAMByteRequest.Default.(float64)
	// costreport.RAMByteRequestValidator is a validator for the "ram_byte_request" field. It is called by the builders before save.
	costreport.RAMByteRequestValidator = costreportDescRAMByteRequest.Validators[0].(func(float64) error)
	// costreportDescPvCost is the schema descriptor for pv_cost field.
	costreportDescPvCost := costreportFields[23].Descriptor()
	// costreport.DefaultPvCost holds the default value on creation for the pv_cost field.
	costreport.DefaultPvCost = costreportDescPvCost.Default.(float64)
	// costreport.PvCostValidator is a validator for the "pv_cost" field. It is called by the builders before save.
	costreport.PvCostValidator = costreportDescPvCost.Validators[0].(func(float64) error)
	// costreportDescPvBytes is the schema descriptor for pv_bytes field.
	costreportDescPvBytes := costreportFields[24].Descriptor()
	// costreport.DefaultPvBytes holds the default value on creation for the pv_bytes field.
	costreport.DefaultPvBytes = costreportDescPvBytes.Default.(float64)
	// costreport.PvBytesValidator is a validator for the "pv_bytes" field. It is called by the builders before save.
	costreport.PvBytesValidator = costreportDescPvBytes.Validators[0].(func(float64) error)
	// costreportDescLoadBalancerCost is the schema descriptor for load_balancer_cost field.
	costreportDescLoadBalancerCost := costreportFields[25].Descriptor()
	// costreport.DefaultLoadBalancerCost holds the default value on creation for the load_balancer_cost field.
	costreport.DefaultLoadBalancerCost = costreportDescLoadBalancerCost.Default.(float64)
	// costreport.LoadBalancerCostValidator is a validator for the "load_balancer_cost" field. It is called by the builders before save.
	costreport.LoadBalancerCostValidator = costreportDescLoadBalancerCost.Validators[0].(func(float64) error)
	// costreportDescCPUCoreUsageAverage is the schema descriptor for cpu_core_usage_average field.
	costreportDescCPUCoreUsageAverage := costreportFields[26].Descriptor()
	// costreport.DefaultCPUCoreUsageAverage holds the default value on creation for the cpu_core_usage_average field.
	costreport.DefaultCPUCoreUsageAverage = costreportDescCPUCoreUsageAverage.Default.(float64)
	// costreport.CPUCoreUsageAverageValidator is a validator for the "cpu_core_usage_average" field. It is called by the builders before save.
	costreport.CPUCoreUsageAverageValidator = costreportDescCPUCoreUsageAverage.Validators[0].(func(float64) error)
	// costreportDescCPUCoreUsageMax is the schema descriptor for cpu_core_usage_max field.
	costreportDescCPUCoreUsageMax := costreportFields[27].Descriptor()
	// costreport.DefaultCPUCoreUsageMax holds the default value on creation for the cpu_core_usage_max field.
	costreport.DefaultCPUCoreUsageMax = costreportDescCPUCoreUsageMax.Default.(float64)
	// costreport.CPUCoreUsageMaxValidator is a validator for the "cpu_core_usage_max" field. It is called by the builders before save.
	costreport.CPUCoreUsageMaxValidator = costreportDescCPUCoreUsageMax.Validators[0].(func(float64) error)
	// costreportDescRAMByteUsageAverage is the schema descriptor for ram_byte_usage_average field.
	costreportDescRAMByteUsageAverage := costreportFields[28].Descriptor()
	// costreport.DefaultRAMByteUsageAverage holds the default value on creation for the ram_byte_usage_average field.
	costreport.DefaultRAMByteUsageAverage = costreportDescRAMByteUsageAverage.Default.(float64)
	// costreport.RAMByteUsageAverageValidator is a validator for the "ram_byte_usage_average" field. It is called by the builders before save.
	costreport.RAMByteUsageAverageValidator = costreportDescRAMByteUsageAverage.Validators[0].(func(float64) error)
	// costreportDescRAMByteUsageMax is the schema descriptor for ram_byte_usage_max field.
	costreportDescRAMByteUsageMax := costreportFields[29].Descriptor()
	// costreport.DefaultRAMByteUsageMax holds the default value on creation for the ram_byte_usage_max field.
	costreport.DefaultRAMByteUsageMax = costreportDescRAMByteUsageMax.Default.(float64)
	// costreport.RAMByteUsageMaxValidator is a validator for the "ram_byte_usage_max" field. It is called by the builders before save.
	costreport.RAMByteUsageMaxValidator = costreportDescRAMByteUsageMax.Validators[0].(func(float64) error)
	distributelockFields := schema.DistributeLock{}.Fields()
	_ = distributelockFields
	// distributelockDescID is the schema descriptor for id field.
	distributelockDescID := distributelockFields[0].Descriptor()
	// distributelock.IDValidator is a validator for the "id" field. It is called by the builders before save.
	distributelock.IDValidator = distributelockDescID.Validators[0].(func(string) error)
	environmentMixin := schema.Environment{}.Mixin()
	environmentMixinHooks0 := environmentMixin[0].Hooks()
	environmentMixinHooks1 := environmentMixin[1].Hooks()
	environment.Hooks[0] = environmentMixinHooks0[0]
	environment.Hooks[1] = environmentMixinHooks1[0]
	environment.Hooks[2] = environmentMixinHooks1[1]
	environmentMixinInters1 := environmentMixin[1].Interceptors()
	environment.Interceptors[0] = environmentMixinInters1[0]
	environmentMixinFields0 := environmentMixin[0].Fields()
	_ = environmentMixinFields0
	environmentMixinFields1 := environmentMixin[1].Fields()
	_ = environmentMixinFields1
	environmentFields := schema.Environment{}.Fields()
	_ = environmentFields
	// environmentDescName is the schema descriptor for name field.
	environmentDescName := environmentMixinFields0[1].Descriptor()
	// environment.NameValidator is a validator for the "name" field. It is called by the builders before save.
	environment.NameValidator = environmentDescName.Validators[0].(func(string) error)
	// environmentDescLabels is the schema descriptor for labels field.
	environmentDescLabels := environmentMixinFields0[3].Descriptor()
	// environment.DefaultLabels holds the default value on creation for the labels field.
	environment.DefaultLabels = environmentDescLabels.Default.(map[string]string)
	// environmentDescAnnotations is the schema descriptor for annotations field.
	environmentDescAnnotations := environmentMixinFields0[4].Descriptor()
	// environment.DefaultAnnotations holds the default value on creation for the annotations field.
	environment.DefaultAnnotations = environmentDescAnnotations.Default.(map[string]string)
	// environmentDescCreateTime is the schema descriptor for create_time field.
	environmentDescCreateTime := environmentMixinFields0[5].Descriptor()
	// environment.DefaultCreateTime holds the default value on creation for the create_time field.
	environment.DefaultCreateTime = environmentDescCreateTime.Default.(func() time.Time)
	// environmentDescUpdateTime is the schema descriptor for update_time field.
	environmentDescUpdateTime := environmentMixinFields0[6].Descriptor()
	// environment.DefaultUpdateTime holds the default value on creation for the update_time field.
	environment.DefaultUpdateTime = environmentDescUpdateTime.Default.(func() time.Time)
	// environment.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	environment.UpdateDefaultUpdateTime = environmentDescUpdateTime.UpdateDefault.(func() time.Time)
	// environmentDescProjectID is the schema descriptor for project_id field.
	environmentDescProjectID := environmentMixinFields1[0].Descriptor()
	// environment.ProjectIDValidator is a validator for the "project_id" field. It is called by the builders before save.
	environment.ProjectIDValidator = environmentDescProjectID.Validators[0].(func(string) error)
	environmentconnectorrelationshipMixin := schema.EnvironmentConnectorRelationship{}.Mixin()
	environmentconnectorrelationshipMixinHooks0 := environmentconnectorrelationshipMixin[0].Hooks()
	environmentconnectorrelationship.Hooks[0] = environmentconnectorrelationshipMixinHooks0[0]
	environmentconnectorrelationshipMixinFields1 := environmentconnectorrelationshipMixin[1].Fields()
	_ = environmentconnectorrelationshipMixinFields1
	environmentconnectorrelationshipFields := schema.EnvironmentConnectorRelationship{}.Fields()
	_ = environmentconnectorrelationshipFields
	// environmentconnectorrelationshipDescCreateTime is the schema descriptor for create_time field.
	environmentconnectorrelationshipDescCreateTime := environmentconnectorrelationshipMixinFields1[0].Descriptor()
	// environmentconnectorrelationship.DefaultCreateTime holds the default value on creation for the create_time field.
	environmentconnectorrelationship.DefaultCreateTime = environmentconnectorrelationshipDescCreateTime.Default.(func() time.Time)
	// environmentconnectorrelationshipDescEnvironmentID is the schema descriptor for environment_id field.
	environmentconnectorrelationshipDescEnvironmentID := environmentconnectorrelationshipFields[0].Descriptor()
	// environmentconnectorrelationship.EnvironmentIDValidator is a validator for the "environment_id" field. It is called by the builders before save.
	environmentconnectorrelationship.EnvironmentIDValidator = environmentconnectorrelationshipDescEnvironmentID.Validators[0].(func(string) error)
	// environmentconnectorrelationshipDescConnectorID is the schema descriptor for connector_id field.
	environmentconnectorrelationshipDescConnectorID := environmentconnectorrelationshipFields[1].Descriptor()
	// environmentconnectorrelationship.ConnectorIDValidator is a validator for the "connector_id" field. It is called by the builders before save.
	environmentconnectorrelationship.ConnectorIDValidator = environmentconnectorrelationshipDescConnectorID.Validators[0].(func(string) error)
	perspectiveMixin := schema.Perspective{}.Mixin()
	perspectiveMixinHooks0 := perspectiveMixin[0].Hooks()
	perspective.Hooks[0] = perspectiveMixinHooks0[0]
	perspectiveMixinFields0 := perspectiveMixin[0].Fields()
	_ = perspectiveMixinFields0
	perspectiveFields := schema.Perspective{}.Fields()
	_ = perspectiveFields
	// perspectiveDescName is the schema descriptor for name field.
	perspectiveDescName := perspectiveMixinFields0[1].Descriptor()
	// perspective.NameValidator is a validator for the "name" field. It is called by the builders before save.
	perspective.NameValidator = perspectiveDescName.Validators[0].(func(string) error)
	// perspectiveDescLabels is the schema descriptor for labels field.
	perspectiveDescLabels := perspectiveMixinFields0[3].Descriptor()
	// perspective.DefaultLabels holds the default value on creation for the labels field.
	perspective.DefaultLabels = perspectiveDescLabels.Default.(map[string]string)
	// perspectiveDescAnnotations is the schema descriptor for annotations field.
	perspectiveDescAnnotations := perspectiveMixinFields0[4].Descriptor()
	// perspective.DefaultAnnotations holds the default value on creation for the annotations field.
	perspective.DefaultAnnotations = perspectiveDescAnnotations.Default.(map[string]string)
	// perspectiveDescCreateTime is the schema descriptor for create_time field.
	perspectiveDescCreateTime := perspectiveMixinFields0[5].Descriptor()
	// perspective.DefaultCreateTime holds the default value on creation for the create_time field.
	perspective.DefaultCreateTime = perspectiveDescCreateTime.Default.(func() time.Time)
	// perspectiveDescUpdateTime is the schema descriptor for update_time field.
	perspectiveDescUpdateTime := perspectiveMixinFields0[6].Descriptor()
	// perspective.DefaultUpdateTime holds the default value on creation for the update_time field.
	perspective.DefaultUpdateTime = perspectiveDescUpdateTime.Default.(func() time.Time)
	// perspective.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	perspective.UpdateDefaultUpdateTime = perspectiveDescUpdateTime.UpdateDefault.(func() time.Time)
	// perspectiveDescStartTime is the schema descriptor for start_time field.
	perspectiveDescStartTime := perspectiveFields[0].Descriptor()
	// perspective.StartTimeValidator is a validator for the "start_time" field. It is called by the builders before save.
	perspective.StartTimeValidator = perspectiveDescStartTime.Validators[0].(func(string) error)
	// perspectiveDescEndTime is the schema descriptor for end_time field.
	perspectiveDescEndTime := perspectiveFields[1].Descriptor()
	// perspective.EndTimeValidator is a validator for the "end_time" field. It is called by the builders before save.
	perspective.EndTimeValidator = perspectiveDescEndTime.Validators[0].(func(string) error)
	// perspectiveDescBuiltin is the schema descriptor for builtin field.
	perspectiveDescBuiltin := perspectiveFields[2].Descriptor()
	// perspective.DefaultBuiltin holds the default value on creation for the builtin field.
	perspective.DefaultBuiltin = perspectiveDescBuiltin.Default.(bool)
	// perspectiveDescCostQueries is the schema descriptor for cost_queries field.
	perspectiveDescCostQueries := perspectiveFields[3].Descriptor()
	// perspective.DefaultCostQueries holds the default value on creation for the cost_queries field.
	perspective.DefaultCostQueries = perspectiveDescCostQueries.Default.([]types.QueryCondition)
	projectMixin := schema.Project{}.Mixin()
	projectMixinHooks0 := projectMixin[0].Hooks()
	project.Hooks[0] = projectMixinHooks0[0]
	projectMixinFields0 := projectMixin[0].Fields()
	_ = projectMixinFields0
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescName is the schema descriptor for name field.
	projectDescName := projectMixinFields0[1].Descriptor()
	// project.NameValidator is a validator for the "name" field. It is called by the builders before save.
	project.NameValidator = projectDescName.Validators[0].(func(string) error)
	// projectDescLabels is the schema descriptor for labels field.
	projectDescLabels := projectMixinFields0[3].Descriptor()
	// project.DefaultLabels holds the default value on creation for the labels field.
	project.DefaultLabels = projectDescLabels.Default.(map[string]string)
	// projectDescAnnotations is the schema descriptor for annotations field.
	projectDescAnnotations := projectMixinFields0[4].Descriptor()
	// project.DefaultAnnotations holds the default value on creation for the annotations field.
	project.DefaultAnnotations = projectDescAnnotations.Default.(map[string]string)
	// projectDescCreateTime is the schema descriptor for create_time field.
	projectDescCreateTime := projectMixinFields0[5].Descriptor()
	// project.DefaultCreateTime holds the default value on creation for the create_time field.
	project.DefaultCreateTime = projectDescCreateTime.Default.(func() time.Time)
	// projectDescUpdateTime is the schema descriptor for update_time field.
	projectDescUpdateTime := projectMixinFields0[6].Descriptor()
	// project.DefaultUpdateTime holds the default value on creation for the update_time field.
	project.DefaultUpdateTime = projectDescUpdateTime.Default.(func() time.Time)
	// project.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	project.UpdateDefaultUpdateTime = projectDescUpdateTime.UpdateDefault.(func() time.Time)
	roleMixin := schema.Role{}.Mixin()
	roleHooks := schema.Role{}.Hooks()
	role.Hooks[0] = roleHooks[0]
	roleMixinFields0 := roleMixin[0].Fields()
	_ = roleMixinFields0
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescCreateTime is the schema descriptor for create_time field.
	roleDescCreateTime := roleMixinFields0[0].Descriptor()
	// role.DefaultCreateTime holds the default value on creation for the create_time field.
	role.DefaultCreateTime = roleDescCreateTime.Default.(func() time.Time)
	// roleDescUpdateTime is the schema descriptor for update_time field.
	roleDescUpdateTime := roleMixinFields0[1].Descriptor()
	// role.DefaultUpdateTime holds the default value on creation for the update_time field.
	role.DefaultUpdateTime = roleDescUpdateTime.Default.(func() time.Time)
	// role.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	role.UpdateDefaultUpdateTime = roleDescUpdateTime.UpdateDefault.(func() time.Time)
	// roleDescKind is the schema descriptor for kind field.
	roleDescKind := roleFields[1].Descriptor()
	// role.DefaultKind holds the default value on creation for the kind field.
	role.DefaultKind = roleDescKind.Default.(string)
	// roleDescPolicies is the schema descriptor for policies field.
	roleDescPolicies := roleFields[3].Descriptor()
	// role.DefaultPolicies holds the default value on creation for the policies field.
	role.DefaultPolicies = roleDescPolicies.Default.(types.RolePolicies)
	// roleDescSession is the schema descriptor for session field.
	roleDescSession := roleFields[4].Descriptor()
	// role.DefaultSession holds the default value on creation for the session field.
	role.DefaultSession = roleDescSession.Default.(bool)
	// roleDescBuiltin is the schema descriptor for builtin field.
	roleDescBuiltin := roleFields[5].Descriptor()
	// role.DefaultBuiltin holds the default value on creation for the builtin field.
	role.DefaultBuiltin = roleDescBuiltin.Default.(bool)
	// roleDescID is the schema descriptor for id field.
	roleDescID := roleFields[0].Descriptor()
	// role.IDValidator is a validator for the "id" field. It is called by the builders before save.
	role.IDValidator = roleDescID.Validators[0].(func(string) error)
	serviceMixin := schema.Service{}.Mixin()
	serviceMixinHooks0 := serviceMixin[0].Hooks()
	serviceMixinHooks1 := serviceMixin[1].Hooks()
	service.Hooks[0] = serviceMixinHooks0[0]
	service.Hooks[1] = serviceMixinHooks1[0]
	service.Hooks[2] = serviceMixinHooks1[1]
	serviceMixinInters1 := serviceMixin[1].Interceptors()
	service.Interceptors[0] = serviceMixinInters1[0]
	serviceMixinFields0 := serviceMixin[0].Fields()
	_ = serviceMixinFields0
	serviceMixinFields1 := serviceMixin[1].Fields()
	_ = serviceMixinFields1
	serviceFields := schema.Service{}.Fields()
	_ = serviceFields
	// serviceDescName is the schema descriptor for name field.
	serviceDescName := serviceMixinFields0[1].Descriptor()
	// service.NameValidator is a validator for the "name" field. It is called by the builders before save.
	service.NameValidator = serviceDescName.Validators[0].(func(string) error)
	// serviceDescLabels is the schema descriptor for labels field.
	serviceDescLabels := serviceMixinFields0[3].Descriptor()
	// service.DefaultLabels holds the default value on creation for the labels field.
	service.DefaultLabels = serviceDescLabels.Default.(map[string]string)
	// serviceDescAnnotations is the schema descriptor for annotations field.
	serviceDescAnnotations := serviceMixinFields0[4].Descriptor()
	// service.DefaultAnnotations holds the default value on creation for the annotations field.
	service.DefaultAnnotations = serviceDescAnnotations.Default.(map[string]string)
	// serviceDescCreateTime is the schema descriptor for create_time field.
	serviceDescCreateTime := serviceMixinFields0[5].Descriptor()
	// service.DefaultCreateTime holds the default value on creation for the create_time field.
	service.DefaultCreateTime = serviceDescCreateTime.Default.(func() time.Time)
	// serviceDescUpdateTime is the schema descriptor for update_time field.
	serviceDescUpdateTime := serviceMixinFields0[6].Descriptor()
	// service.DefaultUpdateTime holds the default value on creation for the update_time field.
	service.DefaultUpdateTime = serviceDescUpdateTime.Default.(func() time.Time)
	// service.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	service.UpdateDefaultUpdateTime = serviceDescUpdateTime.UpdateDefault.(func() time.Time)
	// serviceDescProjectID is the schema descriptor for project_id field.
	serviceDescProjectID := serviceMixinFields1[0].Descriptor()
	// service.ProjectIDValidator is a validator for the "project_id" field. It is called by the builders before save.
	service.ProjectIDValidator = serviceDescProjectID.Validators[0].(func(string) error)
	// serviceDescEnvironmentID is the schema descriptor for environment_id field.
	serviceDescEnvironmentID := serviceFields[0].Descriptor()
	// service.EnvironmentIDValidator is a validator for the "environment_id" field. It is called by the builders before save.
	service.EnvironmentIDValidator = serviceDescEnvironmentID.Validators[0].(func(string) error)
	servicerelationshipMixin := schema.ServiceRelationship{}.Mixin()
	servicerelationshipMixinHooks0 := servicerelationshipMixin[0].Hooks()
	servicerelationship.Hooks[0] = servicerelationshipMixinHooks0[0]
	servicerelationshipMixinFields1 := servicerelationshipMixin[1].Fields()
	_ = servicerelationshipMixinFields1
	servicerelationshipFields := schema.ServiceRelationship{}.Fields()
	_ = servicerelationshipFields
	// servicerelationshipDescCreateTime is the schema descriptor for create_time field.
	servicerelationshipDescCreateTime := servicerelationshipMixinFields1[0].Descriptor()
	// servicerelationship.DefaultCreateTime holds the default value on creation for the create_time field.
	servicerelationship.DefaultCreateTime = servicerelationshipDescCreateTime.Default.(func() time.Time)
	// servicerelationshipDescServiceID is the schema descriptor for service_id field.
	servicerelationshipDescServiceID := servicerelationshipFields[0].Descriptor()
	// servicerelationship.ServiceIDValidator is a validator for the "service_id" field. It is called by the builders before save.
	servicerelationship.ServiceIDValidator = servicerelationshipDescServiceID.Validators[0].(func(string) error)
	// servicerelationshipDescDependencyID is the schema descriptor for dependency_id field.
	servicerelationshipDescDependencyID := servicerelationshipFields[1].Descriptor()
	// servicerelationship.DependencyIDValidator is a validator for the "dependency_id" field. It is called by the builders before save.
	servicerelationship.DependencyIDValidator = servicerelationshipDescDependencyID.Validators[0].(func(string) error)
	// servicerelationshipDescPath is the schema descriptor for path field.
	servicerelationshipDescPath := servicerelationshipFields[2].Descriptor()
	// servicerelationship.DefaultPath holds the default value on creation for the path field.
	servicerelationship.DefaultPath = servicerelationshipDescPath.Default.([]object.ID)
	// servicerelationshipDescType is the schema descriptor for type field.
	servicerelationshipDescType := servicerelationshipFields[3].Descriptor()
	// servicerelationship.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	servicerelationship.TypeValidator = servicerelationshipDescType.Validators[0].(func(string) error)
	serviceresourceMixin := schema.ServiceResource{}.Mixin()
	serviceresourceMixinHooks0 := serviceresourceMixin[0].Hooks()
	serviceresourceMixinHooks2 := serviceresourceMixin[2].Hooks()
	serviceresource.Hooks[0] = serviceresourceMixinHooks0[0]
	serviceresource.Hooks[1] = serviceresourceMixinHooks2[0]
	serviceresource.Hooks[2] = serviceresourceMixinHooks2[1]
	serviceresourceMixinInters2 := serviceresourceMixin[2].Interceptors()
	serviceresource.Interceptors[0] = serviceresourceMixinInters2[0]
	serviceresourceMixinFields1 := serviceresourceMixin[1].Fields()
	_ = serviceresourceMixinFields1
	serviceresourceMixinFields2 := serviceresourceMixin[2].Fields()
	_ = serviceresourceMixinFields2
	serviceresourceFields := schema.ServiceResource{}.Fields()
	_ = serviceresourceFields
	// serviceresourceDescCreateTime is the schema descriptor for create_time field.
	serviceresourceDescCreateTime := serviceresourceMixinFields1[0].Descriptor()
	// serviceresource.DefaultCreateTime holds the default value on creation for the create_time field.
	serviceresource.DefaultCreateTime = serviceresourceDescCreateTime.Default.(func() time.Time)
	// serviceresourceDescUpdateTime is the schema descriptor for update_time field.
	serviceresourceDescUpdateTime := serviceresourceMixinFields1[1].Descriptor()
	// serviceresource.DefaultUpdateTime holds the default value on creation for the update_time field.
	serviceresource.DefaultUpdateTime = serviceresourceDescUpdateTime.Default.(func() time.Time)
	// serviceresource.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	serviceresource.UpdateDefaultUpdateTime = serviceresourceDescUpdateTime.UpdateDefault.(func() time.Time)
	// serviceresourceDescProjectID is the schema descriptor for project_id field.
	serviceresourceDescProjectID := serviceresourceMixinFields2[0].Descriptor()
	// serviceresource.ProjectIDValidator is a validator for the "project_id" field. It is called by the builders before save.
	serviceresource.ProjectIDValidator = serviceresourceDescProjectID.Validators[0].(func(string) error)
	// serviceresourceDescServiceID is the schema descriptor for service_id field.
	serviceresourceDescServiceID := serviceresourceFields[0].Descriptor()
	// serviceresource.ServiceIDValidator is a validator for the "service_id" field. It is called by the builders before save.
	serviceresource.ServiceIDValidator = serviceresourceDescServiceID.Validators[0].(func(string) error)
	// serviceresourceDescConnectorID is the schema descriptor for connector_id field.
	serviceresourceDescConnectorID := serviceresourceFields[1].Descriptor()
	// serviceresource.ConnectorIDValidator is a validator for the "connector_id" field. It is called by the builders before save.
	serviceresource.ConnectorIDValidator = serviceresourceDescConnectorID.Validators[0].(func(string) error)
	// serviceresourceDescMode is the schema descriptor for mode field.
	serviceresourceDescMode := serviceresourceFields[4].Descriptor()
	// serviceresource.ModeValidator is a validator for the "mode" field. It is called by the builders before save.
	serviceresource.ModeValidator = serviceresourceDescMode.Validators[0].(func(string) error)
	// serviceresourceDescType is the schema descriptor for type field.
	serviceresourceDescType := serviceresourceFields[5].Descriptor()
	// serviceresource.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	serviceresource.TypeValidator = serviceresourceDescType.Validators[0].(func(string) error)
	// serviceresourceDescName is the schema descriptor for name field.
	serviceresourceDescName := serviceresourceFields[6].Descriptor()
	// serviceresource.NameValidator is a validator for the "name" field. It is called by the builders before save.
	serviceresource.NameValidator = serviceresourceDescName.Validators[0].(func(string) error)
	// serviceresourceDescDeployerType is the schema descriptor for deployer_type field.
	serviceresourceDescDeployerType := serviceresourceFields[7].Descriptor()
	// serviceresource.DeployerTypeValidator is a validator for the "deployer_type" field. It is called by the builders before save.
	serviceresource.DeployerTypeValidator = serviceresourceDescDeployerType.Validators[0].(func(string) error)
	// serviceresourceDescShape is the schema descriptor for shape field.
	serviceresourceDescShape := serviceresourceFields[8].Descriptor()
	// serviceresource.ShapeValidator is a validator for the "shape" field. It is called by the builders before save.
	serviceresource.ShapeValidator = serviceresourceDescShape.Validators[0].(func(string) error)
	serviceresourcerelationshipMixin := schema.ServiceResourceRelationship{}.Mixin()
	serviceresourcerelationshipMixinHooks0 := serviceresourcerelationshipMixin[0].Hooks()
	serviceresourcerelationship.Hooks[0] = serviceresourcerelationshipMixinHooks0[0]
	serviceresourcerelationshipMixinFields1 := serviceresourcerelationshipMixin[1].Fields()
	_ = serviceresourcerelationshipMixinFields1
	serviceresourcerelationshipFields := schema.ServiceResourceRelationship{}.Fields()
	_ = serviceresourcerelationshipFields
	// serviceresourcerelationshipDescCreateTime is the schema descriptor for create_time field.
	serviceresourcerelationshipDescCreateTime := serviceresourcerelationshipMixinFields1[0].Descriptor()
	// serviceresourcerelationship.DefaultCreateTime holds the default value on creation for the create_time field.
	serviceresourcerelationship.DefaultCreateTime = serviceresourcerelationshipDescCreateTime.Default.(func() time.Time)
	// serviceresourcerelationshipDescServiceResourceID is the schema descriptor for service_resource_id field.
	serviceresourcerelationshipDescServiceResourceID := serviceresourcerelationshipFields[0].Descriptor()
	// serviceresourcerelationship.ServiceResourceIDValidator is a validator for the "service_resource_id" field. It is called by the builders before save.
	serviceresourcerelationship.ServiceResourceIDValidator = serviceresourcerelationshipDescServiceResourceID.Validators[0].(func(string) error)
	// serviceresourcerelationshipDescDependencyID is the schema descriptor for dependency_id field.
	serviceresourcerelationshipDescDependencyID := serviceresourcerelationshipFields[1].Descriptor()
	// serviceresourcerelationship.DependencyIDValidator is a validator for the "dependency_id" field. It is called by the builders before save.
	serviceresourcerelationship.DependencyIDValidator = serviceresourcerelationshipDescDependencyID.Validators[0].(func(string) error)
	// serviceresourcerelationshipDescType is the schema descriptor for type field.
	serviceresourcerelationshipDescType := serviceresourcerelationshipFields[2].Descriptor()
	// serviceresourcerelationship.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	serviceresourcerelationship.TypeValidator = serviceresourcerelationshipDescType.Validators[0].(func(string) error)
	servicerevisionMixin := schema.ServiceRevision{}.Mixin()
	servicerevisionMixinHooks0 := servicerevisionMixin[0].Hooks()
	servicerevisionMixinHooks2 := servicerevisionMixin[2].Hooks()
	servicerevisionMixinHooks3 := servicerevisionMixin[3].Hooks()
	servicerevision.Hooks[0] = servicerevisionMixinHooks0[0]
	servicerevision.Hooks[1] = servicerevisionMixinHooks2[0]
	servicerevision.Hooks[2] = servicerevisionMixinHooks2[1]
	servicerevision.Hooks[3] = servicerevisionMixinHooks3[0]
	servicerevisionMixinInters2 := servicerevisionMixin[2].Interceptors()
	servicerevision.Interceptors[0] = servicerevisionMixinInters2[0]
	servicerevisionMixinFields1 := servicerevisionMixin[1].Fields()
	_ = servicerevisionMixinFields1
	servicerevisionMixinFields2 := servicerevisionMixin[2].Fields()
	_ = servicerevisionMixinFields2
	servicerevisionFields := schema.ServiceRevision{}.Fields()
	_ = servicerevisionFields
	// servicerevisionDescCreateTime is the schema descriptor for create_time field.
	servicerevisionDescCreateTime := servicerevisionMixinFields1[0].Descriptor()
	// servicerevision.DefaultCreateTime holds the default value on creation for the create_time field.
	servicerevision.DefaultCreateTime = servicerevisionDescCreateTime.Default.(func() time.Time)
	// servicerevisionDescProjectID is the schema descriptor for project_id field.
	servicerevisionDescProjectID := servicerevisionMixinFields2[0].Descriptor()
	// servicerevision.ProjectIDValidator is a validator for the "project_id" field. It is called by the builders before save.
	servicerevision.ProjectIDValidator = servicerevisionDescProjectID.Validators[0].(func(string) error)
	// servicerevisionDescEnvironmentID is the schema descriptor for environment_id field.
	servicerevisionDescEnvironmentID := servicerevisionFields[0].Descriptor()
	// servicerevision.EnvironmentIDValidator is a validator for the "environment_id" field. It is called by the builders before save.
	servicerevision.EnvironmentIDValidator = servicerevisionDescEnvironmentID.Validators[0].(func(string) error)
	// servicerevisionDescServiceID is the schema descriptor for service_id field.
	servicerevisionDescServiceID := servicerevisionFields[1].Descriptor()
	// servicerevision.ServiceIDValidator is a validator for the "service_id" field. It is called by the builders before save.
	servicerevision.ServiceIDValidator = servicerevisionDescServiceID.Validators[0].(func(string) error)
	// servicerevisionDescTemplateID is the schema descriptor for template_id field.
	servicerevisionDescTemplateID := servicerevisionFields[2].Descriptor()
	// servicerevision.TemplateIDValidator is a validator for the "template_id" field. It is called by the builders before save.
	servicerevision.TemplateIDValidator = servicerevisionDescTemplateID.Validators[0].(func(string) error)
	// servicerevisionDescTemplateVersion is the schema descriptor for template_version field.
	servicerevisionDescTemplateVersion := servicerevisionFields[3].Descriptor()
	// servicerevision.TemplateVersionValidator is a validator for the "template_version" field. It is called by the builders before save.
	servicerevision.TemplateVersionValidator = servicerevisionDescTemplateVersion.Validators[0].(func(string) error)
	// servicerevisionDescVariables is the schema descriptor for variables field.
	servicerevisionDescVariables := servicerevisionFields[5].Descriptor()
	// servicerevision.DefaultVariables holds the default value on creation for the variables field.
	servicerevision.DefaultVariables = servicerevisionDescVariables.Default.(crypto.Map[string, string])
	// servicerevisionDescDeployerType is the schema descriptor for deployer_type field.
	servicerevisionDescDeployerType := servicerevisionFields[8].Descriptor()
	// servicerevision.DefaultDeployerType holds the default value on creation for the deployer_type field.
	servicerevision.DefaultDeployerType = servicerevisionDescDeployerType.Default.(string)
	// servicerevisionDescDuration is the schema descriptor for duration field.
	servicerevisionDescDuration := servicerevisionFields[9].Descriptor()
	// servicerevision.DefaultDuration holds the default value on creation for the duration field.
	servicerevision.DefaultDuration = servicerevisionDescDuration.Default.(int)
	// servicerevisionDescPreviousRequiredProviders is the schema descriptor for previous_required_providers field.
	servicerevisionDescPreviousRequiredProviders := servicerevisionFields[10].Descriptor()
	// servicerevision.DefaultPreviousRequiredProviders holds the default value on creation for the previous_required_providers field.
	servicerevision.DefaultPreviousRequiredProviders = servicerevisionDescPreviousRequiredProviders.Default.([]types.ProviderRequirement)
	// servicerevisionDescTags is the schema descriptor for tags field.
	servicerevisionDescTags := servicerevisionFields[11].Descriptor()
	// servicerevision.DefaultTags holds the default value on creation for the tags field.
	servicerevision.DefaultTags = servicerevisionDescTags.Default.([]string)
	settingMixin := schema.Setting{}.Mixin()
	settingMixinHooks0 := settingMixin[0].Hooks()
	setting.Hooks[0] = settingMixinHooks0[0]
	settingMixinFields1 := settingMixin[1].Fields()
	_ = settingMixinFields1
	settingFields := schema.Setting{}.Fields()
	_ = settingFields
	// settingDescCreateTime is the schema descriptor for create_time field.
	settingDescCreateTime := settingMixinFields1[0].Descriptor()
	// setting.DefaultCreateTime holds the default value on creation for the create_time field.
	setting.DefaultCreateTime = settingDescCreateTime.Default.(func() time.Time)
	// settingDescUpdateTime is the schema descriptor for update_time field.
	settingDescUpdateTime := settingMixinFields1[1].Descriptor()
	// setting.DefaultUpdateTime holds the default value on creation for the update_time field.
	setting.DefaultUpdateTime = settingDescUpdateTime.Default.(func() time.Time)
	// setting.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	setting.UpdateDefaultUpdateTime = settingDescUpdateTime.UpdateDefault.(func() time.Time)
	// settingDescName is the schema descriptor for name field.
	settingDescName := settingFields[0].Descriptor()
	// setting.NameValidator is a validator for the "name" field. It is called by the builders before save.
	setting.NameValidator = settingDescName.Validators[0].(func(string) error)
	// settingDescHidden is the schema descriptor for hidden field.
	settingDescHidden := settingFields[2].Descriptor()
	// setting.DefaultHidden holds the default value on creation for the hidden field.
	setting.DefaultHidden = settingDescHidden.Default.(bool)
	// settingDescEditable is the schema descriptor for editable field.
	settingDescEditable := settingFields[3].Descriptor()
	// setting.DefaultEditable holds the default value on creation for the editable field.
	setting.DefaultEditable = settingDescEditable.Default.(bool)
	// settingDescSensitive is the schema descriptor for sensitive field.
	settingDescSensitive := settingFields[4].Descriptor()
	// setting.DefaultSensitive holds the default value on creation for the sensitive field.
	setting.DefaultSensitive = settingDescSensitive.Default.(bool)
	// settingDescPrivate is the schema descriptor for private field.
	settingDescPrivate := settingFields[5].Descriptor()
	// setting.DefaultPrivate holds the default value on creation for the private field.
	setting.DefaultPrivate = settingDescPrivate.Default.(bool)
	subjectMixin := schema.Subject{}.Mixin()
	subjectMixinHooks0 := subjectMixin[0].Hooks()
	subject.Hooks[0] = subjectMixinHooks0[0]
	subjectMixinFields1 := subjectMixin[1].Fields()
	_ = subjectMixinFields1
	subjectFields := schema.Subject{}.Fields()
	_ = subjectFields
	// subjectDescCreateTime is the schema descriptor for create_time field.
	subjectDescCreateTime := subjectMixinFields1[0].Descriptor()
	// subject.DefaultCreateTime holds the default value on creation for the create_time field.
	subject.DefaultCreateTime = subjectDescCreateTime.Default.(func() time.Time)
	// subjectDescUpdateTime is the schema descriptor for update_time field.
	subjectDescUpdateTime := subjectMixinFields1[1].Descriptor()
	// subject.DefaultUpdateTime holds the default value on creation for the update_time field.
	subject.DefaultUpdateTime = subjectDescUpdateTime.Default.(func() time.Time)
	// subject.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	subject.UpdateDefaultUpdateTime = subjectDescUpdateTime.UpdateDefault.(func() time.Time)
	// subjectDescKind is the schema descriptor for kind field.
	subjectDescKind := subjectFields[0].Descriptor()
	// subject.DefaultKind holds the default value on creation for the kind field.
	subject.DefaultKind = subjectDescKind.Default.(string)
	// subjectDescDomain is the schema descriptor for domain field.
	subjectDescDomain := subjectFields[1].Descriptor()
	// subject.DefaultDomain holds the default value on creation for the domain field.
	subject.DefaultDomain = subjectDescDomain.Default.(string)
	// subjectDescName is the schema descriptor for name field.
	subjectDescName := subjectFields[2].Descriptor()
	// subject.NameValidator is a validator for the "name" field. It is called by the builders before save.
	subject.NameValidator = subjectDescName.Validators[0].(func(string) error)
	// subjectDescBuiltin is the schema descriptor for builtin field.
	subjectDescBuiltin := subjectFields[4].Descriptor()
	// subject.DefaultBuiltin holds the default value on creation for the builtin field.
	subject.DefaultBuiltin = subjectDescBuiltin.Default.(bool)
	subjectrolerelationshipMixin := schema.SubjectRoleRelationship{}.Mixin()
	subjectrolerelationshipMixinHooks0 := subjectrolerelationshipMixin[0].Hooks()
	subjectrolerelationshipMixinHooks2 := subjectrolerelationshipMixin[2].Hooks()
	subjectrolerelationship.Hooks[0] = subjectrolerelationshipMixinHooks0[0]
	subjectrolerelationship.Hooks[1] = subjectrolerelationshipMixinHooks2[0]
	subjectrolerelationship.Hooks[2] = subjectrolerelationshipMixinHooks2[1]
	subjectrolerelationshipMixinInters2 := subjectrolerelationshipMixin[2].Interceptors()
	subjectrolerelationship.Interceptors[0] = subjectrolerelationshipMixinInters2[0]
	subjectrolerelationshipMixinFields1 := subjectrolerelationshipMixin[1].Fields()
	_ = subjectrolerelationshipMixinFields1
	subjectrolerelationshipFields := schema.SubjectRoleRelationship{}.Fields()
	_ = subjectrolerelationshipFields
	// subjectrolerelationshipDescCreateTime is the schema descriptor for create_time field.
	subjectrolerelationshipDescCreateTime := subjectrolerelationshipMixinFields1[0].Descriptor()
	// subjectrolerelationship.DefaultCreateTime holds the default value on creation for the create_time field.
	subjectrolerelationship.DefaultCreateTime = subjectrolerelationshipDescCreateTime.Default.(func() time.Time)
	// subjectrolerelationshipDescSubjectID is the schema descriptor for subject_id field.
	subjectrolerelationshipDescSubjectID := subjectrolerelationshipFields[0].Descriptor()
	// subjectrolerelationship.SubjectIDValidator is a validator for the "subject_id" field. It is called by the builders before save.
	subjectrolerelationship.SubjectIDValidator = subjectrolerelationshipDescSubjectID.Validators[0].(func(string) error)
	// subjectrolerelationshipDescRoleID is the schema descriptor for role_id field.
	subjectrolerelationshipDescRoleID := subjectrolerelationshipFields[1].Descriptor()
	// subjectrolerelationship.RoleIDValidator is a validator for the "role_id" field. It is called by the builders before save.
	subjectrolerelationship.RoleIDValidator = subjectrolerelationshipDescRoleID.Validators[0].(func(string) error)
	templateMixin := schema.Template{}.Mixin()
	templateMixinHooks1 := templateMixin[1].Hooks()
	template.Hooks[0] = templateMixinHooks1[0]
	templateMixinFields0 := templateMixin[0].Fields()
	_ = templateMixinFields0
	templateFields := schema.Template{}.Fields()
	_ = templateFields
	// templateDescCreateTime is the schema descriptor for create_time field.
	templateDescCreateTime := templateMixinFields0[0].Descriptor()
	// template.DefaultCreateTime holds the default value on creation for the create_time field.
	template.DefaultCreateTime = templateDescCreateTime.Default.(func() time.Time)
	// templateDescUpdateTime is the schema descriptor for update_time field.
	templateDescUpdateTime := templateMixinFields0[1].Descriptor()
	// template.DefaultUpdateTime holds the default value on creation for the update_time field.
	template.DefaultUpdateTime = templateDescUpdateTime.Default.(func() time.Time)
	// template.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	template.UpdateDefaultUpdateTime = templateDescUpdateTime.UpdateDefault.(func() time.Time)
	// templateDescLabels is the schema descriptor for labels field.
	templateDescLabels := templateFields[3].Descriptor()
	// template.DefaultLabels holds the default value on creation for the labels field.
	template.DefaultLabels = templateDescLabels.Default.(map[string]string)
	// templateDescSource is the schema descriptor for source field.
	templateDescSource := templateFields[4].Descriptor()
	// template.SourceValidator is a validator for the "source" field. It is called by the builders before save.
	template.SourceValidator = templateDescSource.Validators[0].(func(string) error)
	// templateDescID is the schema descriptor for id field.
	templateDescID := templateFields[0].Descriptor()
	// template.IDValidator is a validator for the "id" field. It is called by the builders before save.
	template.IDValidator = templateDescID.Validators[0].(func(string) error)
	templateversionMixin := schema.TemplateVersion{}.Mixin()
	templateversionMixinHooks0 := templateversionMixin[0].Hooks()
	templateversion.Hooks[0] = templateversionMixinHooks0[0]
	templateversionMixinFields1 := templateversionMixin[1].Fields()
	_ = templateversionMixinFields1
	templateversionFields := schema.TemplateVersion{}.Fields()
	_ = templateversionFields
	// templateversionDescCreateTime is the schema descriptor for create_time field.
	templateversionDescCreateTime := templateversionMixinFields1[0].Descriptor()
	// templateversion.DefaultCreateTime holds the default value on creation for the create_time field.
	templateversion.DefaultCreateTime = templateversionDescCreateTime.Default.(func() time.Time)
	// templateversionDescUpdateTime is the schema descriptor for update_time field.
	templateversionDescUpdateTime := templateversionMixinFields1[1].Descriptor()
	// templateversion.DefaultUpdateTime holds the default value on creation for the update_time field.
	templateversion.DefaultUpdateTime = templateversionDescUpdateTime.Default.(func() time.Time)
	// templateversion.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	templateversion.UpdateDefaultUpdateTime = templateversionDescUpdateTime.UpdateDefault.(func() time.Time)
	// templateversionDescTemplateID is the schema descriptor for template_id field.
	templateversionDescTemplateID := templateversionFields[0].Descriptor()
	// templateversion.TemplateIDValidator is a validator for the "template_id" field. It is called by the builders before save.
	templateversion.TemplateIDValidator = templateversionDescTemplateID.Validators[0].(func(string) error)
	// templateversionDescVersion is the schema descriptor for version field.
	templateversionDescVersion := templateversionFields[1].Descriptor()
	// templateversion.VersionValidator is a validator for the "version" field. It is called by the builders before save.
	templateversion.VersionValidator = templateversionDescVersion.Validators[0].(func(string) error)
	// templateversionDescSource is the schema descriptor for source field.
	templateversionDescSource := templateversionFields[2].Descriptor()
	// templateversion.SourceValidator is a validator for the "source" field. It is called by the builders before save.
	templateversion.SourceValidator = templateversionDescSource.Validators[0].(func(string) error)
	// templateversionDescSchema is the schema descriptor for schema field.
	templateversionDescSchema := templateversionFields[3].Descriptor()
	// templateversion.DefaultSchema holds the default value on creation for the schema field.
	templateversion.DefaultSchema = templateversionDescSchema.Default.(*types.TemplateSchema)
	tokenMixin := schema.Token{}.Mixin()
	tokenMixinHooks0 := tokenMixin[0].Hooks()
	tokenMixinHooks2 := tokenMixin[2].Hooks()
	token.Hooks[0] = tokenMixinHooks0[0]
	token.Hooks[1] = tokenMixinHooks2[0]
	token.Hooks[2] = tokenMixinHooks2[1]
	tokenMixinInters2 := tokenMixin[2].Interceptors()
	token.Interceptors[0] = tokenMixinInters2[0]
	tokenMixinFields1 := tokenMixin[1].Fields()
	_ = tokenMixinFields1
	tokenMixinFields2 := tokenMixin[2].Fields()
	_ = tokenMixinFields2
	tokenFields := schema.Token{}.Fields()
	_ = tokenFields
	// tokenDescCreateTime is the schema descriptor for create_time field.
	tokenDescCreateTime := tokenMixinFields1[0].Descriptor()
	// token.DefaultCreateTime holds the default value on creation for the create_time field.
	token.DefaultCreateTime = tokenDescCreateTime.Default.(func() time.Time)
	// tokenDescSubjectID is the schema descriptor for subject_id field.
	tokenDescSubjectID := tokenMixinFields2[0].Descriptor()
	// token.SubjectIDValidator is a validator for the "subject_id" field. It is called by the builders before save.
	token.SubjectIDValidator = tokenDescSubjectID.Validators[0].(func(string) error)
	// tokenDescKind is the schema descriptor for kind field.
	tokenDescKind := tokenFields[0].Descriptor()
	// token.DefaultKind holds the default value on creation for the kind field.
	token.DefaultKind = tokenDescKind.Default.(string)
	// tokenDescName is the schema descriptor for name field.
	tokenDescName := tokenFields[1].Descriptor()
	// token.NameValidator is a validator for the "name" field. It is called by the builders before save.
	token.NameValidator = tokenDescName.Validators[0].(func(string) error)
	// tokenDescValue is the schema descriptor for value field.
	tokenDescValue := tokenFields[3].Descriptor()
	// token.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	token.ValueValidator = tokenDescValue.Validators[0].(func(string) error)
	variableMixin := schema.Variable{}.Mixin()
	variableMixinHooks0 := variableMixin[0].Hooks()
	variableMixinHooks2 := variableMixin[2].Hooks()
	variable.Hooks[0] = variableMixinHooks0[0]
	variable.Hooks[1] = variableMixinHooks2[0]
	variable.Hooks[2] = variableMixinHooks2[1]
	variableMixinInters2 := variableMixin[2].Interceptors()
	variable.Interceptors[0] = variableMixinInters2[0]
	variableMixinFields1 := variableMixin[1].Fields()
	_ = variableMixinFields1
	variableFields := schema.Variable{}.Fields()
	_ = variableFields
	// variableDescCreateTime is the schema descriptor for create_time field.
	variableDescCreateTime := variableMixinFields1[0].Descriptor()
	// variable.DefaultCreateTime holds the default value on creation for the create_time field.
	variable.DefaultCreateTime = variableDescCreateTime.Default.(func() time.Time)
	// variableDescUpdateTime is the schema descriptor for update_time field.
	variableDescUpdateTime := variableMixinFields1[1].Descriptor()
	// variable.DefaultUpdateTime holds the default value on creation for the update_time field.
	variable.DefaultUpdateTime = variableDescUpdateTime.Default.(func() time.Time)
	// variable.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	variable.UpdateDefaultUpdateTime = variableDescUpdateTime.UpdateDefault.(func() time.Time)
	// variableDescName is the schema descriptor for name field.
	variableDescName := variableFields[0].Descriptor()
	// variable.NameValidator is a validator for the "name" field. It is called by the builders before save.
	variable.NameValidator = variableDescName.Validators[0].(func(string) error)
	// variableDescValue is the schema descriptor for value field.
	variableDescValue := variableFields[1].Descriptor()
	// variable.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	variable.ValueValidator = variableDescValue.Validators[0].(func(string) error)
	// variableDescSensitive is the schema descriptor for sensitive field.
	variableDescSensitive := variableFields[2].Descriptor()
	// variable.DefaultSensitive holds the default value on creation for the sensitive field.
	variable.DefaultSensitive = variableDescSensitive.Default.(bool)
}

const (
	Version = "v0.12.3"                                         // Version of ent codegen.
	Sum     = "h1:N5lO2EOrHpCH5HYfiMOCHYbo+oh5M8GjT0/cx5x6xkk=" // Sum of ent codegen.
)
