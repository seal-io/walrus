// SPDX-FileCopyrightText: 2023 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "ent". DO NOT EDIT.

package runtime

import (
	"time"

	"github.com/seal-io/seal/pkg/dao/model/allocationcost"
	"github.com/seal-io/seal/pkg/dao/model/clustercost"
	"github.com/seal-io/seal/pkg/dao/model/connector"
	"github.com/seal-io/seal/pkg/dao/model/environment"
	"github.com/seal-io/seal/pkg/dao/model/environmentconnectorrelationship"
	"github.com/seal-io/seal/pkg/dao/model/perspective"
	"github.com/seal-io/seal/pkg/dao/model/project"
	"github.com/seal-io/seal/pkg/dao/model/role"
	"github.com/seal-io/seal/pkg/dao/model/secret"
	"github.com/seal-io/seal/pkg/dao/model/service"
	"github.com/seal-io/seal/pkg/dao/model/servicedependency"
	"github.com/seal-io/seal/pkg/dao/model/serviceresource"
	"github.com/seal-io/seal/pkg/dao/model/servicerevision"
	"github.com/seal-io/seal/pkg/dao/model/setting"
	"github.com/seal-io/seal/pkg/dao/model/subject"
	"github.com/seal-io/seal/pkg/dao/model/subjectrolerelationship"
	"github.com/seal-io/seal/pkg/dao/model/template"
	"github.com/seal-io/seal/pkg/dao/model/templateversion"
	"github.com/seal-io/seal/pkg/dao/model/token"
	"github.com/seal-io/seal/pkg/dao/model/variable"
	"github.com/seal-io/seal/pkg/dao/schema"
	"github.com/seal-io/seal/pkg/dao/types"
	"github.com/seal-io/seal/pkg/dao/types/crypto"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	allocationcostFields := schema.AllocationCost{}.Fields()
	_ = allocationcostFields
	// allocationcostDescConnectorID is the schema descriptor for connectorID field.
	allocationcostDescConnectorID := allocationcostFields[3].Descriptor()
	// allocationcost.ConnectorIDValidator is a validator for the "connectorID" field. It is called by the builders before save.
	allocationcost.ConnectorIDValidator = allocationcostDescConnectorID.Validators[0].(func(string) error)
	// allocationcostDescPvs is the schema descriptor for pvs field.
	allocationcostDescPvs := allocationcostFields[13].Descriptor()
	// allocationcost.DefaultPvs holds the default value on creation for the pvs field.
	allocationcost.DefaultPvs = allocationcostDescPvs.Default.(map[string]types.PVCost)
	// allocationcostDescLabels is the schema descriptor for labels field.
	allocationcostDescLabels := allocationcostFields[14].Descriptor()
	// allocationcost.DefaultLabels holds the default value on creation for the labels field.
	allocationcost.DefaultLabels = allocationcostDescLabels.Default.(map[string]string)
	// allocationcostDescTotalCost is the schema descriptor for totalCost field.
	allocationcostDescTotalCost := allocationcostFields[15].Descriptor()
	// allocationcost.DefaultTotalCost holds the default value on creation for the totalCost field.
	allocationcost.DefaultTotalCost = allocationcostDescTotalCost.Default.(float64)
	// allocationcost.TotalCostValidator is a validator for the "totalCost" field. It is called by the builders before save.
	allocationcost.TotalCostValidator = allocationcostDescTotalCost.Validators[0].(func(float64) error)
	// allocationcostDescCpuCost is the schema descriptor for cpuCost field.
	allocationcostDescCpuCost := allocationcostFields[17].Descriptor()
	// allocationcost.DefaultCpuCost holds the default value on creation for the cpuCost field.
	allocationcost.DefaultCpuCost = allocationcostDescCpuCost.Default.(float64)
	// allocationcost.CpuCostValidator is a validator for the "cpuCost" field. It is called by the builders before save.
	allocationcost.CpuCostValidator = allocationcostDescCpuCost.Validators[0].(func(float64) error)
	// allocationcostDescCpuCoreRequest is the schema descriptor for cpuCoreRequest field.
	allocationcostDescCpuCoreRequest := allocationcostFields[18].Descriptor()
	// allocationcost.DefaultCpuCoreRequest holds the default value on creation for the cpuCoreRequest field.
	allocationcost.DefaultCpuCoreRequest = allocationcostDescCpuCoreRequest.Default.(float64)
	// allocationcost.CpuCoreRequestValidator is a validator for the "cpuCoreRequest" field. It is called by the builders before save.
	allocationcost.CpuCoreRequestValidator = allocationcostDescCpuCoreRequest.Validators[0].(func(float64) error)
	// allocationcostDescGpuCost is the schema descriptor for gpuCost field.
	allocationcostDescGpuCost := allocationcostFields[19].Descriptor()
	// allocationcost.DefaultGpuCost holds the default value on creation for the gpuCost field.
	allocationcost.DefaultGpuCost = allocationcostDescGpuCost.Default.(float64)
	// allocationcost.GpuCostValidator is a validator for the "gpuCost" field. It is called by the builders before save.
	allocationcost.GpuCostValidator = allocationcostDescGpuCost.Validators[0].(func(float64) error)
	// allocationcostDescGpuCount is the schema descriptor for gpuCount field.
	allocationcostDescGpuCount := allocationcostFields[20].Descriptor()
	// allocationcost.DefaultGpuCount holds the default value on creation for the gpuCount field.
	allocationcost.DefaultGpuCount = allocationcostDescGpuCount.Default.(float64)
	// allocationcost.GpuCountValidator is a validator for the "gpuCount" field. It is called by the builders before save.
	allocationcost.GpuCountValidator = allocationcostDescGpuCount.Validators[0].(func(float64) error)
	// allocationcostDescRamCost is the schema descriptor for ramCost field.
	allocationcostDescRamCost := allocationcostFields[21].Descriptor()
	// allocationcost.DefaultRamCost holds the default value on creation for the ramCost field.
	allocationcost.DefaultRamCost = allocationcostDescRamCost.Default.(float64)
	// allocationcost.RamCostValidator is a validator for the "ramCost" field. It is called by the builders before save.
	allocationcost.RamCostValidator = allocationcostDescRamCost.Validators[0].(func(float64) error)
	// allocationcostDescRamByteRequest is the schema descriptor for ramByteRequest field.
	allocationcostDescRamByteRequest := allocationcostFields[22].Descriptor()
	// allocationcost.DefaultRamByteRequest holds the default value on creation for the ramByteRequest field.
	allocationcost.DefaultRamByteRequest = allocationcostDescRamByteRequest.Default.(float64)
	// allocationcost.RamByteRequestValidator is a validator for the "ramByteRequest" field. It is called by the builders before save.
	allocationcost.RamByteRequestValidator = allocationcostDescRamByteRequest.Validators[0].(func(float64) error)
	// allocationcostDescPvCost is the schema descriptor for pvCost field.
	allocationcostDescPvCost := allocationcostFields[23].Descriptor()
	// allocationcost.DefaultPvCost holds the default value on creation for the pvCost field.
	allocationcost.DefaultPvCost = allocationcostDescPvCost.Default.(float64)
	// allocationcost.PvCostValidator is a validator for the "pvCost" field. It is called by the builders before save.
	allocationcost.PvCostValidator = allocationcostDescPvCost.Validators[0].(func(float64) error)
	// allocationcostDescPvBytes is the schema descriptor for pvBytes field.
	allocationcostDescPvBytes := allocationcostFields[24].Descriptor()
	// allocationcost.DefaultPvBytes holds the default value on creation for the pvBytes field.
	allocationcost.DefaultPvBytes = allocationcostDescPvBytes.Default.(float64)
	// allocationcost.PvBytesValidator is a validator for the "pvBytes" field. It is called by the builders before save.
	allocationcost.PvBytesValidator = allocationcostDescPvBytes.Validators[0].(func(float64) error)
	// allocationcostDescLoadBalancerCost is the schema descriptor for loadBalancerCost field.
	allocationcostDescLoadBalancerCost := allocationcostFields[25].Descriptor()
	// allocationcost.DefaultLoadBalancerCost holds the default value on creation for the loadBalancerCost field.
	allocationcost.DefaultLoadBalancerCost = allocationcostDescLoadBalancerCost.Default.(float64)
	// allocationcost.LoadBalancerCostValidator is a validator for the "loadBalancerCost" field. It is called by the builders before save.
	allocationcost.LoadBalancerCostValidator = allocationcostDescLoadBalancerCost.Validators[0].(func(float64) error)
	// allocationcostDescCpuCoreUsageAverage is the schema descriptor for cpuCoreUsageAverage field.
	allocationcostDescCpuCoreUsageAverage := allocationcostFields[26].Descriptor()
	// allocationcost.DefaultCpuCoreUsageAverage holds the default value on creation for the cpuCoreUsageAverage field.
	allocationcost.DefaultCpuCoreUsageAverage = allocationcostDescCpuCoreUsageAverage.Default.(float64)
	// allocationcost.CpuCoreUsageAverageValidator is a validator for the "cpuCoreUsageAverage" field. It is called by the builders before save.
	allocationcost.CpuCoreUsageAverageValidator = allocationcostDescCpuCoreUsageAverage.Validators[0].(func(float64) error)
	// allocationcostDescCpuCoreUsageMax is the schema descriptor for cpuCoreUsageMax field.
	allocationcostDescCpuCoreUsageMax := allocationcostFields[27].Descriptor()
	// allocationcost.DefaultCpuCoreUsageMax holds the default value on creation for the cpuCoreUsageMax field.
	allocationcost.DefaultCpuCoreUsageMax = allocationcostDescCpuCoreUsageMax.Default.(float64)
	// allocationcost.CpuCoreUsageMaxValidator is a validator for the "cpuCoreUsageMax" field. It is called by the builders before save.
	allocationcost.CpuCoreUsageMaxValidator = allocationcostDescCpuCoreUsageMax.Validators[0].(func(float64) error)
	// allocationcostDescRamByteUsageAverage is the schema descriptor for ramByteUsageAverage field.
	allocationcostDescRamByteUsageAverage := allocationcostFields[28].Descriptor()
	// allocationcost.DefaultRamByteUsageAverage holds the default value on creation for the ramByteUsageAverage field.
	allocationcost.DefaultRamByteUsageAverage = allocationcostDescRamByteUsageAverage.Default.(float64)
	// allocationcost.RamByteUsageAverageValidator is a validator for the "ramByteUsageAverage" field. It is called by the builders before save.
	allocationcost.RamByteUsageAverageValidator = allocationcostDescRamByteUsageAverage.Validators[0].(func(float64) error)
	// allocationcostDescRamByteUsageMax is the schema descriptor for ramByteUsageMax field.
	allocationcostDescRamByteUsageMax := allocationcostFields[29].Descriptor()
	// allocationcost.DefaultRamByteUsageMax holds the default value on creation for the ramByteUsageMax field.
	allocationcost.DefaultRamByteUsageMax = allocationcostDescRamByteUsageMax.Default.(float64)
	// allocationcost.RamByteUsageMaxValidator is a validator for the "ramByteUsageMax" field. It is called by the builders before save.
	allocationcost.RamByteUsageMaxValidator = allocationcostDescRamByteUsageMax.Validators[0].(func(float64) error)
	clustercostFields := schema.ClusterCost{}.Fields()
	_ = clustercostFields
	// clustercostDescConnectorID is the schema descriptor for connectorID field.
	clustercostDescConnectorID := clustercostFields[3].Descriptor()
	// clustercost.ConnectorIDValidator is a validator for the "connectorID" field. It is called by the builders before save.
	clustercost.ConnectorIDValidator = clustercostDescConnectorID.Validators[0].(func(string) error)
	// clustercostDescClusterName is the schema descriptor for clusterName field.
	clustercostDescClusterName := clustercostFields[4].Descriptor()
	// clustercost.ClusterNameValidator is a validator for the "clusterName" field. It is called by the builders before save.
	clustercost.ClusterNameValidator = clustercostDescClusterName.Validators[0].(func(string) error)
	// clustercostDescTotalCost is the schema descriptor for totalCost field.
	clustercostDescTotalCost := clustercostFields[5].Descriptor()
	// clustercost.DefaultTotalCost holds the default value on creation for the totalCost field.
	clustercost.DefaultTotalCost = clustercostDescTotalCost.Default.(float64)
	// clustercost.TotalCostValidator is a validator for the "totalCost" field. It is called by the builders before save.
	clustercost.TotalCostValidator = clustercostDescTotalCost.Validators[0].(func(float64) error)
	// clustercostDescAllocationCost is the schema descriptor for allocationCost field.
	clustercostDescAllocationCost := clustercostFields[7].Descriptor()
	// clustercost.DefaultAllocationCost holds the default value on creation for the allocationCost field.
	clustercost.DefaultAllocationCost = clustercostDescAllocationCost.Default.(float64)
	// clustercost.AllocationCostValidator is a validator for the "allocationCost" field. It is called by the builders before save.
	clustercost.AllocationCostValidator = clustercostDescAllocationCost.Validators[0].(func(float64) error)
	// clustercostDescIdleCost is the schema descriptor for idleCost field.
	clustercostDescIdleCost := clustercostFields[8].Descriptor()
	// clustercost.DefaultIdleCost holds the default value on creation for the idleCost field.
	clustercost.DefaultIdleCost = clustercostDescIdleCost.Default.(float64)
	// clustercost.IdleCostValidator is a validator for the "idleCost" field. It is called by the builders before save.
	clustercost.IdleCostValidator = clustercostDescIdleCost.Validators[0].(func(float64) error)
	// clustercostDescManagementCost is the schema descriptor for managementCost field.
	clustercostDescManagementCost := clustercostFields[9].Descriptor()
	// clustercost.DefaultManagementCost holds the default value on creation for the managementCost field.
	clustercost.DefaultManagementCost = clustercostDescManagementCost.Default.(float64)
	// clustercost.ManagementCostValidator is a validator for the "managementCost" field. It is called by the builders before save.
	clustercost.ManagementCostValidator = clustercostDescManagementCost.Validators[0].(func(float64) error)
	connectorMixin := schema.Connector{}.Mixin()
	connectorMixinHooks0 := connectorMixin[0].Hooks()
	connectorMixinHooks1 := connectorMixin[1].Hooks()
	connector.Hooks[0] = connectorMixinHooks0[0]
	connector.Hooks[1] = connectorMixinHooks1[0]
	connector.Hooks[2] = connectorMixinHooks1[1]
	connectorMixinInters1 := connectorMixin[1].Interceptors()
	connector.Interceptors[0] = connectorMixinInters1[0]
	connectorMixinFields0 := connectorMixin[0].Fields()
	_ = connectorMixinFields0
	connectorFields := schema.Connector{}.Fields()
	_ = connectorFields
	// connectorDescName is the schema descriptor for name field.
	connectorDescName := connectorMixinFields0[1].Descriptor()
	// connector.NameValidator is a validator for the "name" field. It is called by the builders before save.
	connector.NameValidator = connectorDescName.Validators[0].(func(string) error)
	// connectorDescLabels is the schema descriptor for labels field.
	connectorDescLabels := connectorMixinFields0[3].Descriptor()
	// connector.DefaultLabels holds the default value on creation for the labels field.
	connector.DefaultLabels = connectorDescLabels.Default.(map[string]string)
	// connectorDescAnnotations is the schema descriptor for annotations field.
	connectorDescAnnotations := connectorMixinFields0[4].Descriptor()
	// connector.DefaultAnnotations holds the default value on creation for the annotations field.
	connector.DefaultAnnotations = connectorDescAnnotations.Default.(map[string]string)
	// connectorDescCreateTime is the schema descriptor for createTime field.
	connectorDescCreateTime := connectorMixinFields0[5].Descriptor()
	// connector.DefaultCreateTime holds the default value on creation for the createTime field.
	connector.DefaultCreateTime = connectorDescCreateTime.Default.(func() time.Time)
	// connectorDescUpdateTime is the schema descriptor for updateTime field.
	connectorDescUpdateTime := connectorMixinFields0[6].Descriptor()
	// connector.DefaultUpdateTime holds the default value on creation for the updateTime field.
	connector.DefaultUpdateTime = connectorDescUpdateTime.Default.(func() time.Time)
	// connector.UpdateDefaultUpdateTime holds the default value on update for the updateTime field.
	connector.UpdateDefaultUpdateTime = connectorDescUpdateTime.UpdateDefault.(func() time.Time)
	// connectorDescType is the schema descriptor for type field.
	connectorDescType := connectorFields[0].Descriptor()
	// connector.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	connector.TypeValidator = connectorDescType.Validators[0].(func(string) error)
	// connectorDescConfigVersion is the schema descriptor for configVersion field.
	connectorDescConfigVersion := connectorFields[1].Descriptor()
	// connector.ConfigVersionValidator is a validator for the "configVersion" field. It is called by the builders before save.
	connector.ConfigVersionValidator = connectorDescConfigVersion.Validators[0].(func(string) error)
	// connectorDescConfigData is the schema descriptor for configData field.
	connectorDescConfigData := connectorFields[2].Descriptor()
	// connector.DefaultConfigData holds the default value on creation for the configData field.
	connector.DefaultConfigData = connectorDescConfigData.Default.(crypto.Properties)
	// connectorDescCategory is the schema descriptor for category field.
	connectorDescCategory := connectorFields[5].Descriptor()
	// connector.CategoryValidator is a validator for the "category" field. It is called by the builders before save.
	connector.CategoryValidator = connectorDescCategory.Validators[0].(func(string) error)
	environmentMixin := schema.Environment{}.Mixin()
	environmentMixinHooks0 := environmentMixin[0].Hooks()
	environmentMixinHooks1 := environmentMixin[1].Hooks()
	environment.Hooks[0] = environmentMixinHooks0[0]
	environment.Hooks[1] = environmentMixinHooks1[0]
	environment.Hooks[2] = environmentMixinHooks1[1]
	environmentMixinInters1 := environmentMixin[1].Interceptors()
	environment.Interceptors[0] = environmentMixinInters1[0]
	environmentMixinFields0 := environmentMixin[0].Fields()
	_ = environmentMixinFields0
	environmentMixinFields1 := environmentMixin[1].Fields()
	_ = environmentMixinFields1
	environmentFields := schema.Environment{}.Fields()
	_ = environmentFields
	// environmentDescName is the schema descriptor for name field.
	environmentDescName := environmentMixinFields0[1].Descriptor()
	// environment.NameValidator is a validator for the "name" field. It is called by the builders before save.
	environment.NameValidator = environmentDescName.Validators[0].(func(string) error)
	// environmentDescLabels is the schema descriptor for labels field.
	environmentDescLabels := environmentMixinFields0[3].Descriptor()
	// environment.DefaultLabels holds the default value on creation for the labels field.
	environment.DefaultLabels = environmentDescLabels.Default.(map[string]string)
	// environmentDescAnnotations is the schema descriptor for annotations field.
	environmentDescAnnotations := environmentMixinFields0[4].Descriptor()
	// environment.DefaultAnnotations holds the default value on creation for the annotations field.
	environment.DefaultAnnotations = environmentDescAnnotations.Default.(map[string]string)
	// environmentDescCreateTime is the schema descriptor for createTime field.
	environmentDescCreateTime := environmentMixinFields0[5].Descriptor()
	// environment.DefaultCreateTime holds the default value on creation for the createTime field.
	environment.DefaultCreateTime = environmentDescCreateTime.Default.(func() time.Time)
	// environmentDescUpdateTime is the schema descriptor for updateTime field.
	environmentDescUpdateTime := environmentMixinFields0[6].Descriptor()
	// environment.DefaultUpdateTime holds the default value on creation for the updateTime field.
	environment.DefaultUpdateTime = environmentDescUpdateTime.Default.(func() time.Time)
	// environment.UpdateDefaultUpdateTime holds the default value on update for the updateTime field.
	environment.UpdateDefaultUpdateTime = environmentDescUpdateTime.UpdateDefault.(func() time.Time)
	// environmentDescProjectID is the schema descriptor for projectID field.
	environmentDescProjectID := environmentMixinFields1[0].Descriptor()
	// environment.ProjectIDValidator is a validator for the "projectID" field. It is called by the builders before save.
	environment.ProjectIDValidator = environmentDescProjectID.Validators[0].(func(string) error)
	environmentconnectorrelationshipMixin := schema.EnvironmentConnectorRelationship{}.Mixin()
	environmentconnectorrelationshipMixinFields0 := environmentconnectorrelationshipMixin[0].Fields()
	_ = environmentconnectorrelationshipMixinFields0
	environmentconnectorrelationshipFields := schema.EnvironmentConnectorRelationship{}.Fields()
	_ = environmentconnectorrelationshipFields
	// environmentconnectorrelationshipDescCreateTime is the schema descriptor for createTime field.
	environmentconnectorrelationshipDescCreateTime := environmentconnectorrelationshipMixinFields0[0].Descriptor()
	// environmentconnectorrelationship.DefaultCreateTime holds the default value on creation for the createTime field.
	environmentconnectorrelationship.DefaultCreateTime = environmentconnectorrelationshipDescCreateTime.Default.(func() time.Time)
	// environmentconnectorrelationshipDescEnvironmentID is the schema descriptor for environment_id field.
	environmentconnectorrelationshipDescEnvironmentID := environmentconnectorrelationshipFields[0].Descriptor()
	// environmentconnectorrelationship.EnvironmentIDValidator is a validator for the "environment_id" field. It is called by the builders before save.
	environmentconnectorrelationship.EnvironmentIDValidator = environmentconnectorrelationshipDescEnvironmentID.Validators[0].(func(string) error)
	// environmentconnectorrelationshipDescConnectorID is the schema descriptor for connector_id field.
	environmentconnectorrelationshipDescConnectorID := environmentconnectorrelationshipFields[1].Descriptor()
	// environmentconnectorrelationship.ConnectorIDValidator is a validator for the "connector_id" field. It is called by the builders before save.
	environmentconnectorrelationship.ConnectorIDValidator = environmentconnectorrelationshipDescConnectorID.Validators[0].(func(string) error)
	perspectiveMixin := schema.Perspective{}.Mixin()
	perspectiveMixinHooks0 := perspectiveMixin[0].Hooks()
	perspective.Hooks[0] = perspectiveMixinHooks0[0]
	perspectiveMixinFields0 := perspectiveMixin[0].Fields()
	_ = perspectiveMixinFields0
	perspectiveFields := schema.Perspective{}.Fields()
	_ = perspectiveFields
	// perspectiveDescName is the schema descriptor for name field.
	perspectiveDescName := perspectiveMixinFields0[1].Descriptor()
	// perspective.NameValidator is a validator for the "name" field. It is called by the builders before save.
	perspective.NameValidator = perspectiveDescName.Validators[0].(func(string) error)
	// perspectiveDescLabels is the schema descriptor for labels field.
	perspectiveDescLabels := perspectiveMixinFields0[3].Descriptor()
	// perspective.DefaultLabels holds the default value on creation for the labels field.
	perspective.DefaultLabels = perspectiveDescLabels.Default.(map[string]string)
	// perspectiveDescAnnotations is the schema descriptor for annotations field.
	perspectiveDescAnnotations := perspectiveMixinFields0[4].Descriptor()
	// perspective.DefaultAnnotations holds the default value on creation for the annotations field.
	perspective.DefaultAnnotations = perspectiveDescAnnotations.Default.(map[string]string)
	// perspectiveDescCreateTime is the schema descriptor for createTime field.
	perspectiveDescCreateTime := perspectiveMixinFields0[5].Descriptor()
	// perspective.DefaultCreateTime holds the default value on creation for the createTime field.
	perspective.DefaultCreateTime = perspectiveDescCreateTime.Default.(func() time.Time)
	// perspectiveDescUpdateTime is the schema descriptor for updateTime field.
	perspectiveDescUpdateTime := perspectiveMixinFields0[6].Descriptor()
	// perspective.DefaultUpdateTime holds the default value on creation for the updateTime field.
	perspective.DefaultUpdateTime = perspectiveDescUpdateTime.Default.(func() time.Time)
	// perspective.UpdateDefaultUpdateTime holds the default value on update for the updateTime field.
	perspective.UpdateDefaultUpdateTime = perspectiveDescUpdateTime.UpdateDefault.(func() time.Time)
	// perspectiveDescStartTime is the schema descriptor for startTime field.
	perspectiveDescStartTime := perspectiveFields[0].Descriptor()
	// perspective.StartTimeValidator is a validator for the "startTime" field. It is called by the builders before save.
	perspective.StartTimeValidator = perspectiveDescStartTime.Validators[0].(func(string) error)
	// perspectiveDescEndTime is the schema descriptor for endTime field.
	perspectiveDescEndTime := perspectiveFields[1].Descriptor()
	// perspective.EndTimeValidator is a validator for the "endTime" field. It is called by the builders before save.
	perspective.EndTimeValidator = perspectiveDescEndTime.Validators[0].(func(string) error)
	// perspectiveDescBuiltin is the schema descriptor for builtin field.
	perspectiveDescBuiltin := perspectiveFields[2].Descriptor()
	// perspective.DefaultBuiltin holds the default value on creation for the builtin field.
	perspective.DefaultBuiltin = perspectiveDescBuiltin.Default.(bool)
	// perspectiveDescAllocationQueries is the schema descriptor for allocationQueries field.
	perspectiveDescAllocationQueries := perspectiveFields[3].Descriptor()
	// perspective.DefaultAllocationQueries holds the default value on creation for the allocationQueries field.
	perspective.DefaultAllocationQueries = perspectiveDescAllocationQueries.Default.([]types.QueryCondition)
	projectMixin := schema.Project{}.Mixin()
	projectMixinHooks0 := projectMixin[0].Hooks()
	project.Hooks[0] = projectMixinHooks0[0]
	projectMixinFields0 := projectMixin[0].Fields()
	_ = projectMixinFields0
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescName is the schema descriptor for name field.
	projectDescName := projectMixinFields0[1].Descriptor()
	// project.NameValidator is a validator for the "name" field. It is called by the builders before save.
	project.NameValidator = projectDescName.Validators[0].(func(string) error)
	// projectDescLabels is the schema descriptor for labels field.
	projectDescLabels := projectMixinFields0[3].Descriptor()
	// project.DefaultLabels holds the default value on creation for the labels field.
	project.DefaultLabels = projectDescLabels.Default.(map[string]string)
	// projectDescAnnotations is the schema descriptor for annotations field.
	projectDescAnnotations := projectMixinFields0[4].Descriptor()
	// project.DefaultAnnotations holds the default value on creation for the annotations field.
	project.DefaultAnnotations = projectDescAnnotations.Default.(map[string]string)
	// projectDescCreateTime is the schema descriptor for createTime field.
	projectDescCreateTime := projectMixinFields0[5].Descriptor()
	// project.DefaultCreateTime holds the default value on creation for the createTime field.
	project.DefaultCreateTime = projectDescCreateTime.Default.(func() time.Time)
	// projectDescUpdateTime is the schema descriptor for updateTime field.
	projectDescUpdateTime := projectMixinFields0[6].Descriptor()
	// project.DefaultUpdateTime holds the default value on creation for the updateTime field.
	project.DefaultUpdateTime = projectDescUpdateTime.Default.(func() time.Time)
	// project.UpdateDefaultUpdateTime holds the default value on update for the updateTime field.
	project.UpdateDefaultUpdateTime = projectDescUpdateTime.UpdateDefault.(func() time.Time)
	roleMixin := schema.Role{}.Mixin()
	roleMixinFields0 := roleMixin[0].Fields()
	_ = roleMixinFields0
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescCreateTime is the schema descriptor for createTime field.
	roleDescCreateTime := roleMixinFields0[0].Descriptor()
	// role.DefaultCreateTime holds the default value on creation for the createTime field.
	role.DefaultCreateTime = roleDescCreateTime.Default.(func() time.Time)
	// roleDescUpdateTime is the schema descriptor for updateTime field.
	roleDescUpdateTime := roleMixinFields0[1].Descriptor()
	// role.DefaultUpdateTime holds the default value on creation for the updateTime field.
	role.DefaultUpdateTime = roleDescUpdateTime.Default.(func() time.Time)
	// role.UpdateDefaultUpdateTime holds the default value on update for the updateTime field.
	role.UpdateDefaultUpdateTime = roleDescUpdateTime.UpdateDefault.(func() time.Time)
	// roleDescKind is the schema descriptor for kind field.
	roleDescKind := roleFields[1].Descriptor()
	// role.DefaultKind holds the default value on creation for the kind field.
	role.DefaultKind = roleDescKind.Default.(string)
	// roleDescPolicies is the schema descriptor for policies field.
	roleDescPolicies := roleFields[3].Descriptor()
	// role.DefaultPolicies holds the default value on creation for the policies field.
	role.DefaultPolicies = roleDescPolicies.Default.(types.RolePolicies)
	// roleDescSession is the schema descriptor for session field.
	roleDescSession := roleFields[4].Descriptor()
	// role.DefaultSession holds the default value on creation for the session field.
	role.DefaultSession = roleDescSession.Default.(bool)
	// roleDescBuiltin is the schema descriptor for builtin field.
	roleDescBuiltin := roleFields[5].Descriptor()
	// role.DefaultBuiltin holds the default value on creation for the builtin field.
	role.DefaultBuiltin = roleDescBuiltin.Default.(bool)
	// roleDescID is the schema descriptor for id field.
	roleDescID := roleFields[0].Descriptor()
	// role.IDValidator is a validator for the "id" field. It is called by the builders before save.
	role.IDValidator = roleDescID.Validators[0].(func(string) error)
	secretMixin := schema.Secret{}.Mixin()
	secretMixinHooks0 := secretMixin[0].Hooks()
	secretMixinHooks2 := secretMixin[2].Hooks()
	secret.Hooks[0] = secretMixinHooks0[0]
	secret.Hooks[1] = secretMixinHooks2[0]
	secret.Hooks[2] = secretMixinHooks2[1]
	secretMixinInters2 := secretMixin[2].Interceptors()
	secret.Interceptors[0] = secretMixinInters2[0]
	secretMixinFields1 := secretMixin[1].Fields()
	_ = secretMixinFields1
	secretFields := schema.Secret{}.Fields()
	_ = secretFields
	// secretDescCreateTime is the schema descriptor for createTime field.
	secretDescCreateTime := secretMixinFields1[0].Descriptor()
	// secret.DefaultCreateTime holds the default value on creation for the createTime field.
	secret.DefaultCreateTime = secretDescCreateTime.Default.(func() time.Time)
	// secretDescUpdateTime is the schema descriptor for updateTime field.
	secretDescUpdateTime := secretMixinFields1[1].Descriptor()
	// secret.DefaultUpdateTime holds the default value on creation for the updateTime field.
	secret.DefaultUpdateTime = secretDescUpdateTime.Default.(func() time.Time)
	// secret.UpdateDefaultUpdateTime holds the default value on update for the updateTime field.
	secret.UpdateDefaultUpdateTime = secretDescUpdateTime.UpdateDefault.(func() time.Time)
	// secretDescName is the schema descriptor for name field.
	secretDescName := secretFields[0].Descriptor()
	// secret.NameValidator is a validator for the "name" field. It is called by the builders before save.
	secret.NameValidator = secretDescName.Validators[0].(func(string) error)
	// secretDescValue is the schema descriptor for value field.
	secretDescValue := secretFields[1].Descriptor()
	// secret.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	secret.ValueValidator = secretDescValue.Validators[0].(func(string) error)
	serviceMixin := schema.Service{}.Mixin()
	serviceMixinHooks0 := serviceMixin[0].Hooks()
	serviceMixinHooks1 := serviceMixin[1].Hooks()
	service.Hooks[0] = serviceMixinHooks0[0]
	service.Hooks[1] = serviceMixinHooks1[0]
	service.Hooks[2] = serviceMixinHooks1[1]
	serviceMixinInters1 := serviceMixin[1].Interceptors()
	service.Interceptors[0] = serviceMixinInters1[0]
	serviceMixinFields0 := serviceMixin[0].Fields()
	_ = serviceMixinFields0
	serviceMixinFields1 := serviceMixin[1].Fields()
	_ = serviceMixinFields1
	serviceFields := schema.Service{}.Fields()
	_ = serviceFields
	// serviceDescName is the schema descriptor for name field.
	serviceDescName := serviceMixinFields0[1].Descriptor()
	// service.NameValidator is a validator for the "name" field. It is called by the builders before save.
	service.NameValidator = serviceDescName.Validators[0].(func(string) error)
	// serviceDescLabels is the schema descriptor for labels field.
	serviceDescLabels := serviceMixinFields0[3].Descriptor()
	// service.DefaultLabels holds the default value on creation for the labels field.
	service.DefaultLabels = serviceDescLabels.Default.(map[string]string)
	// serviceDescAnnotations is the schema descriptor for annotations field.
	serviceDescAnnotations := serviceMixinFields0[4].Descriptor()
	// service.DefaultAnnotations holds the default value on creation for the annotations field.
	service.DefaultAnnotations = serviceDescAnnotations.Default.(map[string]string)
	// serviceDescCreateTime is the schema descriptor for createTime field.
	serviceDescCreateTime := serviceMixinFields0[5].Descriptor()
	// service.DefaultCreateTime holds the default value on creation for the createTime field.
	service.DefaultCreateTime = serviceDescCreateTime.Default.(func() time.Time)
	// serviceDescUpdateTime is the schema descriptor for updateTime field.
	serviceDescUpdateTime := serviceMixinFields0[6].Descriptor()
	// service.DefaultUpdateTime holds the default value on creation for the updateTime field.
	service.DefaultUpdateTime = serviceDescUpdateTime.Default.(func() time.Time)
	// service.UpdateDefaultUpdateTime holds the default value on update for the updateTime field.
	service.UpdateDefaultUpdateTime = serviceDescUpdateTime.UpdateDefault.(func() time.Time)
	// serviceDescProjectID is the schema descriptor for projectID field.
	serviceDescProjectID := serviceMixinFields1[0].Descriptor()
	// service.ProjectIDValidator is a validator for the "projectID" field. It is called by the builders before save.
	service.ProjectIDValidator = serviceDescProjectID.Validators[0].(func(string) error)
	// serviceDescEnvironmentID is the schema descriptor for environmentID field.
	serviceDescEnvironmentID := serviceFields[0].Descriptor()
	// service.EnvironmentIDValidator is a validator for the "environmentID" field. It is called by the builders before save.
	service.EnvironmentIDValidator = serviceDescEnvironmentID.Validators[0].(func(string) error)
	servicedependencyMixin := schema.ServiceDependency{}.Mixin()
	servicedependencyMixinHooks0 := servicedependencyMixin[0].Hooks()
	servicedependency.Hooks[0] = servicedependencyMixinHooks0[0]
	servicedependencyMixinFields1 := servicedependencyMixin[1].Fields()
	_ = servicedependencyMixinFields1
	servicedependencyFields := schema.ServiceDependency{}.Fields()
	_ = servicedependencyFields
	// servicedependencyDescCreateTime is the schema descriptor for createTime field.
	servicedependencyDescCreateTime := servicedependencyMixinFields1[0].Descriptor()
	// servicedependency.DefaultCreateTime holds the default value on creation for the createTime field.
	servicedependency.DefaultCreateTime = servicedependencyDescCreateTime.Default.(func() time.Time)
	// servicedependencyDescServiceID is the schema descriptor for serviceID field.
	servicedependencyDescServiceID := servicedependencyFields[0].Descriptor()
	// servicedependency.ServiceIDValidator is a validator for the "serviceID" field. It is called by the builders before save.
	servicedependency.ServiceIDValidator = servicedependencyDescServiceID.Validators[0].(func(string) error)
	// servicedependencyDescDependentID is the schema descriptor for dependentID field.
	servicedependencyDescDependentID := servicedependencyFields[1].Descriptor()
	// servicedependency.DependentIDValidator is a validator for the "dependentID" field. It is called by the builders before save.
	servicedependency.DependentIDValidator = servicedependencyDescDependentID.Validators[0].(func(string) error)
	// servicedependencyDescType is the schema descriptor for type field.
	servicedependencyDescType := servicedependencyFields[3].Descriptor()
	// servicedependency.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	servicedependency.TypeValidator = servicedependencyDescType.Validators[0].(func(string) error)
	serviceresourceMixin := schema.ServiceResource{}.Mixin()
	serviceresourceMixinHooks0 := serviceresourceMixin[0].Hooks()
	serviceresourceMixinHooks2 := serviceresourceMixin[2].Hooks()
	serviceresource.Hooks[0] = serviceresourceMixinHooks0[0]
	serviceresource.Hooks[1] = serviceresourceMixinHooks2[0]
	serviceresource.Hooks[2] = serviceresourceMixinHooks2[1]
	serviceresourceMixinInters2 := serviceresourceMixin[2].Interceptors()
	serviceresourceInters := schema.ServiceResource{}.Interceptors()
	serviceresource.Interceptors[0] = serviceresourceMixinInters2[0]
	serviceresource.Interceptors[1] = serviceresourceInters[0]
	serviceresourceMixinFields1 := serviceresourceMixin[1].Fields()
	_ = serviceresourceMixinFields1
	serviceresourceMixinFields2 := serviceresourceMixin[2].Fields()
	_ = serviceresourceMixinFields2
	serviceresourceFields := schema.ServiceResource{}.Fields()
	_ = serviceresourceFields
	// serviceresourceDescCreateTime is the schema descriptor for createTime field.
	serviceresourceDescCreateTime := serviceresourceMixinFields1[0].Descriptor()
	// serviceresource.DefaultCreateTime holds the default value on creation for the createTime field.
	serviceresource.DefaultCreateTime = serviceresourceDescCreateTime.Default.(func() time.Time)
	// serviceresourceDescUpdateTime is the schema descriptor for updateTime field.
	serviceresourceDescUpdateTime := serviceresourceMixinFields1[1].Descriptor()
	// serviceresource.DefaultUpdateTime holds the default value on creation for the updateTime field.
	serviceresource.DefaultUpdateTime = serviceresourceDescUpdateTime.Default.(func() time.Time)
	// serviceresource.UpdateDefaultUpdateTime holds the default value on update for the updateTime field.
	serviceresource.UpdateDefaultUpdateTime = serviceresourceDescUpdateTime.UpdateDefault.(func() time.Time)
	// serviceresourceDescProjectID is the schema descriptor for projectID field.
	serviceresourceDescProjectID := serviceresourceMixinFields2[0].Descriptor()
	// serviceresource.ProjectIDValidator is a validator for the "projectID" field. It is called by the builders before save.
	serviceresource.ProjectIDValidator = serviceresourceDescProjectID.Validators[0].(func(string) error)
	// serviceresourceDescServiceID is the schema descriptor for serviceID field.
	serviceresourceDescServiceID := serviceresourceFields[0].Descriptor()
	// serviceresource.ServiceIDValidator is a validator for the "serviceID" field. It is called by the builders before save.
	serviceresource.ServiceIDValidator = serviceresourceDescServiceID.Validators[0].(func(string) error)
	// serviceresourceDescConnectorID is the schema descriptor for connectorID field.
	serviceresourceDescConnectorID := serviceresourceFields[1].Descriptor()
	// serviceresource.ConnectorIDValidator is a validator for the "connectorID" field. It is called by the builders before save.
	serviceresource.ConnectorIDValidator = serviceresourceDescConnectorID.Validators[0].(func(string) error)
	// serviceresourceDescMode is the schema descriptor for mode field.
	serviceresourceDescMode := serviceresourceFields[3].Descriptor()
	// serviceresource.ModeValidator is a validator for the "mode" field. It is called by the builders before save.
	serviceresource.ModeValidator = serviceresourceDescMode.Validators[0].(func(string) error)
	// serviceresourceDescType is the schema descriptor for type field.
	serviceresourceDescType := serviceresourceFields[4].Descriptor()
	// serviceresource.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	serviceresource.TypeValidator = serviceresourceDescType.Validators[0].(func(string) error)
	// serviceresourceDescName is the schema descriptor for name field.
	serviceresourceDescName := serviceresourceFields[5].Descriptor()
	// serviceresource.NameValidator is a validator for the "name" field. It is called by the builders before save.
	serviceresource.NameValidator = serviceresourceDescName.Validators[0].(func(string) error)
	// serviceresourceDescDeployerType is the schema descriptor for deployerType field.
	serviceresourceDescDeployerType := serviceresourceFields[6].Descriptor()
	// serviceresource.DeployerTypeValidator is a validator for the "deployerType" field. It is called by the builders before save.
	serviceresource.DeployerTypeValidator = serviceresourceDescDeployerType.Validators[0].(func(string) error)
	servicerevisionMixin := schema.ServiceRevision{}.Mixin()
	servicerevisionMixinHooks0 := servicerevisionMixin[0].Hooks()
	servicerevisionMixinHooks2 := servicerevisionMixin[2].Hooks()
	servicerevision.Hooks[0] = servicerevisionMixinHooks0[0]
	servicerevision.Hooks[1] = servicerevisionMixinHooks2[0]
	servicerevision.Hooks[2] = servicerevisionMixinHooks2[1]
	servicerevisionMixinInters2 := servicerevisionMixin[2].Interceptors()
	servicerevision.Interceptors[0] = servicerevisionMixinInters2[0]
	servicerevisionMixinFields1 := servicerevisionMixin[1].Fields()
	_ = servicerevisionMixinFields1
	servicerevisionMixinFields2 := servicerevisionMixin[2].Fields()
	_ = servicerevisionMixinFields2
	servicerevisionFields := schema.ServiceRevision{}.Fields()
	_ = servicerevisionFields
	// servicerevisionDescCreateTime is the schema descriptor for createTime field.
	servicerevisionDescCreateTime := servicerevisionMixinFields1[0].Descriptor()
	// servicerevision.DefaultCreateTime holds the default value on creation for the createTime field.
	servicerevision.DefaultCreateTime = servicerevisionDescCreateTime.Default.(func() time.Time)
	// servicerevisionDescProjectID is the schema descriptor for projectID field.
	servicerevisionDescProjectID := servicerevisionMixinFields2[0].Descriptor()
	// servicerevision.ProjectIDValidator is a validator for the "projectID" field. It is called by the builders before save.
	servicerevision.ProjectIDValidator = servicerevisionDescProjectID.Validators[0].(func(string) error)
	// servicerevisionDescServiceID is the schema descriptor for serviceID field.
	servicerevisionDescServiceID := servicerevisionFields[0].Descriptor()
	// servicerevision.ServiceIDValidator is a validator for the "serviceID" field. It is called by the builders before save.
	servicerevision.ServiceIDValidator = servicerevisionDescServiceID.Validators[0].(func(string) error)
	// servicerevisionDescEnvironmentID is the schema descriptor for environmentID field.
	servicerevisionDescEnvironmentID := servicerevisionFields[1].Descriptor()
	// servicerevision.EnvironmentIDValidator is a validator for the "environmentID" field. It is called by the builders before save.
	servicerevision.EnvironmentIDValidator = servicerevisionDescEnvironmentID.Validators[0].(func(string) error)
	// servicerevisionDescTemplateID is the schema descriptor for templateID field.
	servicerevisionDescTemplateID := servicerevisionFields[2].Descriptor()
	// servicerevision.TemplateIDValidator is a validator for the "templateID" field. It is called by the builders before save.
	servicerevision.TemplateIDValidator = servicerevisionDescTemplateID.Validators[0].(func(string) error)
	// servicerevisionDescTemplateVersion is the schema descriptor for templateVersion field.
	servicerevisionDescTemplateVersion := servicerevisionFields[3].Descriptor()
	// servicerevision.TemplateVersionValidator is a validator for the "templateVersion" field. It is called by the builders before save.
	servicerevision.TemplateVersionValidator = servicerevisionDescTemplateVersion.Validators[0].(func(string) error)
	// servicerevisionDescSecrets is the schema descriptor for secrets field.
	servicerevisionDescSecrets := servicerevisionFields[5].Descriptor()
	// servicerevision.DefaultSecrets holds the default value on creation for the secrets field.
	servicerevision.DefaultSecrets = servicerevisionDescSecrets.Default.(crypto.Map[string, string])
	// servicerevisionDescVariables is the schema descriptor for variables field.
	servicerevisionDescVariables := servicerevisionFields[6].Descriptor()
	// servicerevision.DefaultVariables holds the default value on creation for the variables field.
	servicerevision.DefaultVariables = servicerevisionDescVariables.Default.(crypto.Map[string, string])
	// servicerevisionDescDeployerType is the schema descriptor for deployerType field.
	servicerevisionDescDeployerType := servicerevisionFields[9].Descriptor()
	// servicerevision.DefaultDeployerType holds the default value on creation for the deployerType field.
	servicerevision.DefaultDeployerType = servicerevisionDescDeployerType.Default.(string)
	// servicerevisionDescDuration is the schema descriptor for duration field.
	servicerevisionDescDuration := servicerevisionFields[10].Descriptor()
	// servicerevision.DefaultDuration holds the default value on creation for the duration field.
	servicerevision.DefaultDuration = servicerevisionDescDuration.Default.(int)
	// servicerevisionDescPreviousRequiredProviders is the schema descriptor for previousRequiredProviders field.
	servicerevisionDescPreviousRequiredProviders := servicerevisionFields[11].Descriptor()
	// servicerevision.DefaultPreviousRequiredProviders holds the default value on creation for the previousRequiredProviders field.
	servicerevision.DefaultPreviousRequiredProviders = servicerevisionDescPreviousRequiredProviders.Default.([]types.ProviderRequirement)
	// servicerevisionDescTags is the schema descriptor for tags field.
	servicerevisionDescTags := servicerevisionFields[12].Descriptor()
	// servicerevision.DefaultTags holds the default value on creation for the tags field.
	servicerevision.DefaultTags = servicerevisionDescTags.Default.([]string)
	settingMixin := schema.Setting{}.Mixin()
	settingMixinHooks0 := settingMixin[0].Hooks()
	setting.Hooks[0] = settingMixinHooks0[0]
	settingMixinFields1 := settingMixin[1].Fields()
	_ = settingMixinFields1
	settingFields := schema.Setting{}.Fields()
	_ = settingFields
	// settingDescCreateTime is the schema descriptor for createTime field.
	settingDescCreateTime := settingMixinFields1[0].Descriptor()
	// setting.DefaultCreateTime holds the default value on creation for the createTime field.
	setting.DefaultCreateTime = settingDescCreateTime.Default.(func() time.Time)
	// settingDescUpdateTime is the schema descriptor for updateTime field.
	settingDescUpdateTime := settingMixinFields1[1].Descriptor()
	// setting.DefaultUpdateTime holds the default value on creation for the updateTime field.
	setting.DefaultUpdateTime = settingDescUpdateTime.Default.(func() time.Time)
	// setting.UpdateDefaultUpdateTime holds the default value on update for the updateTime field.
	setting.UpdateDefaultUpdateTime = settingDescUpdateTime.UpdateDefault.(func() time.Time)
	// settingDescName is the schema descriptor for name field.
	settingDescName := settingFields[0].Descriptor()
	// setting.NameValidator is a validator for the "name" field. It is called by the builders before save.
	setting.NameValidator = settingDescName.Validators[0].(func(string) error)
	// settingDescHidden is the schema descriptor for hidden field.
	settingDescHidden := settingFields[2].Descriptor()
	// setting.DefaultHidden holds the default value on creation for the hidden field.
	setting.DefaultHidden = settingDescHidden.Default.(bool)
	// settingDescEditable is the schema descriptor for editable field.
	settingDescEditable := settingFields[3].Descriptor()
	// setting.DefaultEditable holds the default value on creation for the editable field.
	setting.DefaultEditable = settingDescEditable.Default.(bool)
	// settingDescSensitive is the schema descriptor for sensitive field.
	settingDescSensitive := settingFields[4].Descriptor()
	// setting.DefaultSensitive holds the default value on creation for the sensitive field.
	setting.DefaultSensitive = settingDescSensitive.Default.(bool)
	// settingDescPrivate is the schema descriptor for private field.
	settingDescPrivate := settingFields[5].Descriptor()
	// setting.DefaultPrivate holds the default value on creation for the private field.
	setting.DefaultPrivate = settingDescPrivate.Default.(bool)
	subjectMixin := schema.Subject{}.Mixin()
	subjectMixinHooks0 := subjectMixin[0].Hooks()
	subject.Hooks[0] = subjectMixinHooks0[0]
	subjectMixinFields1 := subjectMixin[1].Fields()
	_ = subjectMixinFields1
	subjectFields := schema.Subject{}.Fields()
	_ = subjectFields
	// subjectDescCreateTime is the schema descriptor for createTime field.
	subjectDescCreateTime := subjectMixinFields1[0].Descriptor()
	// subject.DefaultCreateTime holds the default value on creation for the createTime field.
	subject.DefaultCreateTime = subjectDescCreateTime.Default.(func() time.Time)
	// subjectDescUpdateTime is the schema descriptor for updateTime field.
	subjectDescUpdateTime := subjectMixinFields1[1].Descriptor()
	// subject.DefaultUpdateTime holds the default value on creation for the updateTime field.
	subject.DefaultUpdateTime = subjectDescUpdateTime.Default.(func() time.Time)
	// subject.UpdateDefaultUpdateTime holds the default value on update for the updateTime field.
	subject.UpdateDefaultUpdateTime = subjectDescUpdateTime.UpdateDefault.(func() time.Time)
	// subjectDescKind is the schema descriptor for kind field.
	subjectDescKind := subjectFields[0].Descriptor()
	// subject.DefaultKind holds the default value on creation for the kind field.
	subject.DefaultKind = subjectDescKind.Default.(string)
	// subjectDescDomain is the schema descriptor for domain field.
	subjectDescDomain := subjectFields[1].Descriptor()
	// subject.DefaultDomain holds the default value on creation for the domain field.
	subject.DefaultDomain = subjectDescDomain.Default.(string)
	// subjectDescName is the schema descriptor for name field.
	subjectDescName := subjectFields[2].Descriptor()
	// subject.NameValidator is a validator for the "name" field. It is called by the builders before save.
	subject.NameValidator = subjectDescName.Validators[0].(func(string) error)
	// subjectDescBuiltin is the schema descriptor for builtin field.
	subjectDescBuiltin := subjectFields[4].Descriptor()
	// subject.DefaultBuiltin holds the default value on creation for the builtin field.
	subject.DefaultBuiltin = subjectDescBuiltin.Default.(bool)
	subjectrolerelationshipMixin := schema.SubjectRoleRelationship{}.Mixin()
	subjectrolerelationshipMixinHooks0 := subjectrolerelationshipMixin[0].Hooks()
	subjectrolerelationshipMixinHooks2 := subjectrolerelationshipMixin[2].Hooks()
	subjectrolerelationship.Hooks[0] = subjectrolerelationshipMixinHooks0[0]
	subjectrolerelationship.Hooks[1] = subjectrolerelationshipMixinHooks2[0]
	subjectrolerelationship.Hooks[2] = subjectrolerelationshipMixinHooks2[1]
	subjectrolerelationshipMixinInters2 := subjectrolerelationshipMixin[2].Interceptors()
	subjectrolerelationship.Interceptors[0] = subjectrolerelationshipMixinInters2[0]
	subjectrolerelationshipMixinFields1 := subjectrolerelationshipMixin[1].Fields()
	_ = subjectrolerelationshipMixinFields1
	subjectrolerelationshipFields := schema.SubjectRoleRelationship{}.Fields()
	_ = subjectrolerelationshipFields
	// subjectrolerelationshipDescCreateTime is the schema descriptor for createTime field.
	subjectrolerelationshipDescCreateTime := subjectrolerelationshipMixinFields1[0].Descriptor()
	// subjectrolerelationship.DefaultCreateTime holds the default value on creation for the createTime field.
	subjectrolerelationship.DefaultCreateTime = subjectrolerelationshipDescCreateTime.Default.(func() time.Time)
	// subjectrolerelationshipDescSubjectID is the schema descriptor for subject_id field.
	subjectrolerelationshipDescSubjectID := subjectrolerelationshipFields[0].Descriptor()
	// subjectrolerelationship.SubjectIDValidator is a validator for the "subject_id" field. It is called by the builders before save.
	subjectrolerelationship.SubjectIDValidator = subjectrolerelationshipDescSubjectID.Validators[0].(func(string) error)
	// subjectrolerelationshipDescRoleID is the schema descriptor for role_id field.
	subjectrolerelationshipDescRoleID := subjectrolerelationshipFields[1].Descriptor()
	// subjectrolerelationship.RoleIDValidator is a validator for the "role_id" field. It is called by the builders before save.
	subjectrolerelationship.RoleIDValidator = subjectrolerelationshipDescRoleID.Validators[0].(func(string) error)
	templateMixin := schema.Template{}.Mixin()
	templateMixinFields0 := templateMixin[0].Fields()
	_ = templateMixinFields0
	templateFields := schema.Template{}.Fields()
	_ = templateFields
	// templateDescCreateTime is the schema descriptor for createTime field.
	templateDescCreateTime := templateMixinFields0[0].Descriptor()
	// template.DefaultCreateTime holds the default value on creation for the createTime field.
	template.DefaultCreateTime = templateDescCreateTime.Default.(func() time.Time)
	// templateDescUpdateTime is the schema descriptor for updateTime field.
	templateDescUpdateTime := templateMixinFields0[1].Descriptor()
	// template.DefaultUpdateTime holds the default value on creation for the updateTime field.
	template.DefaultUpdateTime = templateDescUpdateTime.Default.(func() time.Time)
	// template.UpdateDefaultUpdateTime holds the default value on update for the updateTime field.
	template.UpdateDefaultUpdateTime = templateDescUpdateTime.UpdateDefault.(func() time.Time)
	// templateDescLabels is the schema descriptor for labels field.
	templateDescLabels := templateFields[3].Descriptor()
	// template.DefaultLabels holds the default value on creation for the labels field.
	template.DefaultLabels = templateDescLabels.Default.(map[string]string)
	// templateDescSource is the schema descriptor for source field.
	templateDescSource := templateFields[4].Descriptor()
	// template.SourceValidator is a validator for the "source" field. It is called by the builders before save.
	template.SourceValidator = templateDescSource.Validators[0].(func(string) error)
	// templateDescID is the schema descriptor for id field.
	templateDescID := templateFields[0].Descriptor()
	// template.IDValidator is a validator for the "id" field. It is called by the builders before save.
	template.IDValidator = templateDescID.Validators[0].(func(string) error)
	templateversionMixin := schema.TemplateVersion{}.Mixin()
	templateversionMixinHooks0 := templateversionMixin[0].Hooks()
	templateversion.Hooks[0] = templateversionMixinHooks0[0]
	templateversionMixinFields1 := templateversionMixin[1].Fields()
	_ = templateversionMixinFields1
	templateversionFields := schema.TemplateVersion{}.Fields()
	_ = templateversionFields
	// templateversionDescCreateTime is the schema descriptor for createTime field.
	templateversionDescCreateTime := templateversionMixinFields1[0].Descriptor()
	// templateversion.DefaultCreateTime holds the default value on creation for the createTime field.
	templateversion.DefaultCreateTime = templateversionDescCreateTime.Default.(func() time.Time)
	// templateversionDescUpdateTime is the schema descriptor for updateTime field.
	templateversionDescUpdateTime := templateversionMixinFields1[1].Descriptor()
	// templateversion.DefaultUpdateTime holds the default value on creation for the updateTime field.
	templateversion.DefaultUpdateTime = templateversionDescUpdateTime.Default.(func() time.Time)
	// templateversion.UpdateDefaultUpdateTime holds the default value on update for the updateTime field.
	templateversion.UpdateDefaultUpdateTime = templateversionDescUpdateTime.UpdateDefault.(func() time.Time)
	// templateversionDescTemplateID is the schema descriptor for templateID field.
	templateversionDescTemplateID := templateversionFields[0].Descriptor()
	// templateversion.TemplateIDValidator is a validator for the "templateID" field. It is called by the builders before save.
	templateversion.TemplateIDValidator = templateversionDescTemplateID.Validators[0].(func(string) error)
	// templateversionDescVersion is the schema descriptor for version field.
	templateversionDescVersion := templateversionFields[1].Descriptor()
	// templateversion.VersionValidator is a validator for the "version" field. It is called by the builders before save.
	templateversion.VersionValidator = templateversionDescVersion.Validators[0].(func(string) error)
	// templateversionDescSource is the schema descriptor for source field.
	templateversionDescSource := templateversionFields[2].Descriptor()
	// templateversion.SourceValidator is a validator for the "source" field. It is called by the builders before save.
	templateversion.SourceValidator = templateversionDescSource.Validators[0].(func(string) error)
	// templateversionDescSchema is the schema descriptor for schema field.
	templateversionDescSchema := templateversionFields[3].Descriptor()
	// templateversion.DefaultSchema holds the default value on creation for the schema field.
	templateversion.DefaultSchema = templateversionDescSchema.Default.(*types.TemplateSchema)
	tokenMixin := schema.Token{}.Mixin()
	tokenMixinHooks0 := tokenMixin[0].Hooks()
	tokenMixinHooks2 := tokenMixin[2].Hooks()
	token.Hooks[0] = tokenMixinHooks0[0]
	token.Hooks[1] = tokenMixinHooks2[0]
	token.Hooks[2] = tokenMixinHooks2[1]
	tokenMixinInters2 := tokenMixin[2].Interceptors()
	token.Interceptors[0] = tokenMixinInters2[0]
	tokenMixinFields1 := tokenMixin[1].Fields()
	_ = tokenMixinFields1
	tokenMixinFields2 := tokenMixin[2].Fields()
	_ = tokenMixinFields2
	tokenFields := schema.Token{}.Fields()
	_ = tokenFields
	// tokenDescCreateTime is the schema descriptor for createTime field.
	tokenDescCreateTime := tokenMixinFields1[0].Descriptor()
	// token.DefaultCreateTime holds the default value on creation for the createTime field.
	token.DefaultCreateTime = tokenDescCreateTime.Default.(func() time.Time)
	// tokenDescSubjectID is the schema descriptor for subjectID field.
	tokenDescSubjectID := tokenMixinFields2[0].Descriptor()
	// token.SubjectIDValidator is a validator for the "subjectID" field. It is called by the builders before save.
	token.SubjectIDValidator = tokenDescSubjectID.Validators[0].(func(string) error)
	// tokenDescKind is the schema descriptor for kind field.
	tokenDescKind := tokenFields[0].Descriptor()
	// token.DefaultKind holds the default value on creation for the kind field.
	token.DefaultKind = tokenDescKind.Default.(string)
	// tokenDescName is the schema descriptor for name field.
	tokenDescName := tokenFields[1].Descriptor()
	// token.NameValidator is a validator for the "name" field. It is called by the builders before save.
	token.NameValidator = tokenDescName.Validators[0].(func(string) error)
	// tokenDescValue is the schema descriptor for value field.
	tokenDescValue := tokenFields[3].Descriptor()
	// token.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	token.ValueValidator = tokenDescValue.Validators[0].(func(string) error)
	variableMixin := schema.Variable{}.Mixin()
	variableMixinHooks0 := variableMixin[0].Hooks()
	variableMixinHooks2 := variableMixin[2].Hooks()
	variable.Hooks[0] = variableMixinHooks0[0]
	variable.Hooks[1] = variableMixinHooks2[0]
	variable.Hooks[2] = variableMixinHooks2[1]
	variableMixinInters2 := variableMixin[2].Interceptors()
	variable.Interceptors[0] = variableMixinInters2[0]
	variableMixinFields1 := variableMixin[1].Fields()
	_ = variableMixinFields1
	variableFields := schema.Variable{}.Fields()
	_ = variableFields
	// variableDescCreateTime is the schema descriptor for createTime field.
	variableDescCreateTime := variableMixinFields1[0].Descriptor()
	// variable.DefaultCreateTime holds the default value on creation for the createTime field.
	variable.DefaultCreateTime = variableDescCreateTime.Default.(func() time.Time)
	// variableDescUpdateTime is the schema descriptor for updateTime field.
	variableDescUpdateTime := variableMixinFields1[1].Descriptor()
	// variable.DefaultUpdateTime holds the default value on creation for the updateTime field.
	variable.DefaultUpdateTime = variableDescUpdateTime.Default.(func() time.Time)
	// variable.UpdateDefaultUpdateTime holds the default value on update for the updateTime field.
	variable.UpdateDefaultUpdateTime = variableDescUpdateTime.UpdateDefault.(func() time.Time)
	// variableDescName is the schema descriptor for name field.
	variableDescName := variableFields[0].Descriptor()
	// variable.NameValidator is a validator for the "name" field. It is called by the builders before save.
	variable.NameValidator = variableDescName.Validators[0].(func(string) error)
	// variableDescValue is the schema descriptor for value field.
	variableDescValue := variableFields[1].Descriptor()
	// variable.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	variable.ValueValidator = variableDescValue.Validators[0].(func(string) error)
	// variableDescSensitive is the schema descriptor for sensitive field.
	variableDescSensitive := variableFields[2].Descriptor()
	// variable.DefaultSensitive holds the default value on creation for the sensitive field.
	variable.DefaultSensitive = variableDescSensitive.Default.(bool)
}

const (
	Version = "v0.12.2" // Version of ent codegen.
)
