// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus". DO NOT EDIT.

package model

import "context"

// ClientSet is an interface that allows getting all clients.
type ClientSet interface {
	// Catalogs returns the client for interacting with the Catalog builders.
	Catalogs() *CatalogClient

	// Connectors returns the client for interacting with the Connector builders.
	Connectors() *ConnectorClient

	// CostReports returns the client for interacting with the CostReport builders.
	CostReports() *CostReportClient

	// DistributeLocks returns the client for interacting with the DistributeLock builders.
	DistributeLocks() *DistributeLockClient

	// Environments returns the client for interacting with the Environment builders.
	Environments() *EnvironmentClient

	// EnvironmentConnectorRelationships returns the client for interacting with the EnvironmentConnectorRelationship builders.
	EnvironmentConnectorRelationships() *EnvironmentConnectorRelationshipClient

	// Perspectives returns the client for interacting with the Perspective builders.
	Perspectives() *PerspectiveClient

	// Projects returns the client for interacting with the Project builders.
	Projects() *ProjectClient

	// Resources returns the client for interacting with the Resource builders.
	Resources() *ResourceClient

	// ResourceComponents returns the client for interacting with the ResourceComponent builders.
	ResourceComponents() *ResourceComponentClient

	// ResourceComponentRelationships returns the client for interacting with the ResourceComponentRelationship builders.
	ResourceComponentRelationships() *ResourceComponentRelationshipClient

	// ResourceDefinitions returns the client for interacting with the ResourceDefinition builders.
	ResourceDefinitions() *ResourceDefinitionClient

	// ResourceDefinitionMatchingRules returns the client for interacting with the ResourceDefinitionMatchingRule builders.
	ResourceDefinitionMatchingRules() *ResourceDefinitionMatchingRuleClient

	// ResourceRelationships returns the client for interacting with the ResourceRelationship builders.
	ResourceRelationships() *ResourceRelationshipClient

	// ResourceRevisions returns the client for interacting with the ResourceRevision builders.
	ResourceRevisions() *ResourceRevisionClient

	// Roles returns the client for interacting with the Role builders.
	Roles() *RoleClient

	// Settings returns the client for interacting with the Setting builders.
	Settings() *SettingClient

	// Subjects returns the client for interacting with the Subject builders.
	Subjects() *SubjectClient

	// SubjectRoleRelationships returns the client for interacting with the SubjectRoleRelationship builders.
	SubjectRoleRelationships() *SubjectRoleRelationshipClient

	// Templates returns the client for interacting with the Template builders.
	Templates() *TemplateClient

	// TemplateVersions returns the client for interacting with the TemplateVersion builders.
	TemplateVersions() *TemplateVersionClient

	// Tokens returns the client for interacting with the Token builders.
	Tokens() *TokenClient

	// Variables returns the client for interacting with the Variable builders.
	Variables() *VariableClient

	// Workflows returns the client for interacting with the Workflow builders.
	Workflows() *WorkflowClient

	// WorkflowExecutions returns the client for interacting with the WorkflowExecution builders.
	WorkflowExecutions() *WorkflowExecutionClient

	// WorkflowStages returns the client for interacting with the WorkflowStage builders.
	WorkflowStages() *WorkflowStageClient

	// WorkflowStageExecutions returns the client for interacting with the WorkflowStageExecution builders.
	WorkflowStageExecutions() *WorkflowStageExecutionClient

	// WorkflowSteps returns the client for interacting with the WorkflowStep builders.
	WorkflowSteps() *WorkflowStepClient

	// WorkflowStepExecutions returns the client for interacting with the WorkflowStepExecution builders.
	WorkflowStepExecutions() *WorkflowStepExecutionClient

	// Dialect returns the dialect name of the driver.
	Dialect() string

	// Use adds the mutation hooks to all the entity clients.
	Use(...Hook)

	// Intercept adds the query interceptors to all the entity clients.
	Intercept(...Interceptor)

	// WithDebug returns the debug mode of the client.
	WithDebug() ClientSet

	// WithTx gives a new transactional client in the callback function,
	// if already in a transaction, this will keep in the same transaction.
	WithTx(context.Context, func(tx *Tx) error) error
}

// CatalogClientGetter is an interface that allows getting CatalogClient.
type CatalogClientGetter interface {
	// Catalogs returns the client for interacting with the Catalog builders.
	Catalogs() *CatalogClient
}

// ConnectorClientGetter is an interface that allows getting ConnectorClient.
type ConnectorClientGetter interface {
	// Connectors returns the client for interacting with the Connector builders.
	Connectors() *ConnectorClient
}

// CostReportClientGetter is an interface that allows getting CostReportClient.
type CostReportClientGetter interface {
	// CostReports returns the client for interacting with the CostReport builders.
	CostReports() *CostReportClient
}

// DistributeLockClientGetter is an interface that allows getting DistributeLockClient.
type DistributeLockClientGetter interface {
	// DistributeLocks returns the client for interacting with the DistributeLock builders.
	DistributeLocks() *DistributeLockClient
}

// EnvironmentClientGetter is an interface that allows getting EnvironmentClient.
type EnvironmentClientGetter interface {
	// Environments returns the client for interacting with the Environment builders.
	Environments() *EnvironmentClient
}

// EnvironmentConnectorRelationshipClientGetter is an interface that allows getting EnvironmentConnectorRelationshipClient.
type EnvironmentConnectorRelationshipClientGetter interface {
	// EnvironmentConnectorRelationships returns the client for interacting with the EnvironmentConnectorRelationship builders.
	EnvironmentConnectorRelationships() *EnvironmentConnectorRelationshipClient
}

// PerspectiveClientGetter is an interface that allows getting PerspectiveClient.
type PerspectiveClientGetter interface {
	// Perspectives returns the client for interacting with the Perspective builders.
	Perspectives() *PerspectiveClient
}

// ProjectClientGetter is an interface that allows getting ProjectClient.
type ProjectClientGetter interface {
	// Projects returns the client for interacting with the Project builders.
	Projects() *ProjectClient
}

// ResourceClientGetter is an interface that allows getting ResourceClient.
type ResourceClientGetter interface {
	// Resources returns the client for interacting with the Resource builders.
	Resources() *ResourceClient
}

// ResourceComponentClientGetter is an interface that allows getting ResourceComponentClient.
type ResourceComponentClientGetter interface {
	// ResourceComponents returns the client for interacting with the ResourceComponent builders.
	ResourceComponents() *ResourceComponentClient
}

// ResourceComponentRelationshipClientGetter is an interface that allows getting ResourceComponentRelationshipClient.
type ResourceComponentRelationshipClientGetter interface {
	// ResourceComponentRelationships returns the client for interacting with the ResourceComponentRelationship builders.
	ResourceComponentRelationships() *ResourceComponentRelationshipClient
}

// ResourceDefinitionClientGetter is an interface that allows getting ResourceDefinitionClient.
type ResourceDefinitionClientGetter interface {
	// ResourceDefinitions returns the client for interacting with the ResourceDefinition builders.
	ResourceDefinitions() *ResourceDefinitionClient
}

// ResourceDefinitionMatchingRuleClientGetter is an interface that allows getting ResourceDefinitionMatchingRuleClient.
type ResourceDefinitionMatchingRuleClientGetter interface {
	// ResourceDefinitionMatchingRules returns the client for interacting with the ResourceDefinitionMatchingRule builders.
	ResourceDefinitionMatchingRules() *ResourceDefinitionMatchingRuleClient
}

// ResourceRelationshipClientGetter is an interface that allows getting ResourceRelationshipClient.
type ResourceRelationshipClientGetter interface {
	// ResourceRelationships returns the client for interacting with the ResourceRelationship builders.
	ResourceRelationships() *ResourceRelationshipClient
}

// ResourceRevisionClientGetter is an interface that allows getting ResourceRevisionClient.
type ResourceRevisionClientGetter interface {
	// ResourceRevisions returns the client for interacting with the ResourceRevision builders.
	ResourceRevisions() *ResourceRevisionClient
}

// RoleClientGetter is an interface that allows getting RoleClient.
type RoleClientGetter interface {
	// Roles returns the client for interacting with the Role builders.
	Roles() *RoleClient
}

// SettingClientGetter is an interface that allows getting SettingClient.
type SettingClientGetter interface {
	// Settings returns the client for interacting with the Setting builders.
	Settings() *SettingClient
}

// SubjectClientGetter is an interface that allows getting SubjectClient.
type SubjectClientGetter interface {
	// Subjects returns the client for interacting with the Subject builders.
	Subjects() *SubjectClient
}

// SubjectRoleRelationshipClientGetter is an interface that allows getting SubjectRoleRelationshipClient.
type SubjectRoleRelationshipClientGetter interface {
	// SubjectRoleRelationships returns the client for interacting with the SubjectRoleRelationship builders.
	SubjectRoleRelationships() *SubjectRoleRelationshipClient
}

// TemplateClientGetter is an interface that allows getting TemplateClient.
type TemplateClientGetter interface {
	// Templates returns the client for interacting with the Template builders.
	Templates() *TemplateClient
}

// TemplateVersionClientGetter is an interface that allows getting TemplateVersionClient.
type TemplateVersionClientGetter interface {
	// TemplateVersions returns the client for interacting with the TemplateVersion builders.
	TemplateVersions() *TemplateVersionClient
}

// TokenClientGetter is an interface that allows getting TokenClient.
type TokenClientGetter interface {
	// Tokens returns the client for interacting with the Token builders.
	Tokens() *TokenClient
}

// VariableClientGetter is an interface that allows getting VariableClient.
type VariableClientGetter interface {
	// Variables returns the client for interacting with the Variable builders.
	Variables() *VariableClient
}

// WorkflowClientGetter is an interface that allows getting WorkflowClient.
type WorkflowClientGetter interface {
	// Workflows returns the client for interacting with the Workflow builders.
	Workflows() *WorkflowClient
}

// WorkflowExecutionClientGetter is an interface that allows getting WorkflowExecutionClient.
type WorkflowExecutionClientGetter interface {
	// WorkflowExecutions returns the client for interacting with the WorkflowExecution builders.
	WorkflowExecutions() *WorkflowExecutionClient
}

// WorkflowStageClientGetter is an interface that allows getting WorkflowStageClient.
type WorkflowStageClientGetter interface {
	// WorkflowStages returns the client for interacting with the WorkflowStage builders.
	WorkflowStages() *WorkflowStageClient
}

// WorkflowStageExecutionClientGetter is an interface that allows getting WorkflowStageExecutionClient.
type WorkflowStageExecutionClientGetter interface {
	// WorkflowStageExecutions returns the client for interacting with the WorkflowStageExecution builders.
	WorkflowStageExecutions() *WorkflowStageExecutionClient
}

// WorkflowStepClientGetter is an interface that allows getting WorkflowStepClient.
type WorkflowStepClientGetter interface {
	// WorkflowSteps returns the client for interacting with the WorkflowStep builders.
	WorkflowSteps() *WorkflowStepClient
}

// WorkflowStepExecutionClientGetter is an interface that allows getting WorkflowStepExecutionClient.
type WorkflowStepExecutionClientGetter interface {
	// WorkflowStepExecutions returns the client for interacting with the WorkflowStepExecution builders.
	WorkflowStepExecutions() *WorkflowStepExecutionClient
}
