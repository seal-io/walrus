// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.seal_io.walrus.pkg.apis.walruscore.v1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/seal-io/walrus/pkg/apis/walruscore/v1";

// Catalog is the schema for the catalogs API.
//
// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:crd-gen:resource:scope="Namespaced",subResources=["status"]
message Catalog {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CatalogSpec spec = 2;

  optional CatalogStatus status = 3;
}

// CatalogList holds the list of Catalog.
//
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message CatalogList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Catalog items = 2;
}

// CatalogSpec defines the desired state of Catalog.
message CatalogSpec {
}

// CatalogStatus defines the observed state of Catalog.
message CatalogStatus {
}

// Connector is the schema for the connectors API.
//
// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:crd-gen:resource:scope="Namespaced",subResources=["status"]
message Connector {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ConnectorSpec spec = 2;

  optional ConnectorStatus status = 3;
}

// ConnectorList holds the list of Connector.
//
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message ConnectorList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Connector items = 2;
}

// ConnectorSpec defines the desired state of Connector.
message ConnectorSpec {
}

// ConnectorStatus defines the observed state of Connector.
message ConnectorStatus {
}

// Resource is the schema for the resources API.
//
// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:crd-gen:resource:scope="Namespaced",subResources=["status"]
message Resource {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ResourceSpec spec = 2;

  optional ResourceStatus status = 3;
}

// ResourceDefinition is the schema for the resource definitions API.
//
// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:crd-gen:resource:scope="Namespaced",subResources=["status"]
message ResourceDefinition {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ResourceDefinitionSpec spec = 2;

  optional ResourceDefinitionStatus status = 3;
}

// ResourceDefinitionList holds the list of ResourceDefinition.
//
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message ResourceDefinitionList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ResourceDefinition items = 2;
}

// ResourceDefinitionSpec defines the desired state of ResourceDefinition.
message ResourceDefinitionSpec {
}

// ResourceDefinitionStatus defines the observed state of ResourceDefinition.
message ResourceDefinitionStatus {
}

// ResourceList holds the list of Resource.
//
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message ResourceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Resource items = 2;
}

// ResourceSpec defines the desired state of Resource.
message ResourceSpec {
}

// ResourceStatus defines the observed state of Resource.
message ResourceStatus {
}

// Template is the schema for the templates API.
//
// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:crd-gen:resource:scope="Namespaced",subResources=["status"]
message Template {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TemplateSpec spec = 2;

  optional TemplateStatus status = 3;
}

// TemplateList holds the list of Template.
//
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message TemplateList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Template items = 2;
}

// TemplateSpec defines the desired state of Template.
message TemplateSpec {
}

// TemplateStatus defines the observed state of Template.
message TemplateStatus {
}

