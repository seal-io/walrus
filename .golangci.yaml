run:
  timeout: 10m
  tests: true
  skip-files:
    - "doc.go"
  modules-download-mode: readonly

# output configuration options
output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  #
  # Multiple can be specified by separating them by comma, output can be provided
  # for each of them by separating format name and path by colon symbol.
  # Output path can be either `stdout`, `stderr` or path to the file to write to.
  # Example: "checkstyle:report.json,colored-line-number"
  #
  # Default: colored-line-number
  format: colored-line-number
  # Print lines of code with issue.
  # Default: true
  print-issued-lines: true
  # Print linter name in the end of issue text.
  # Default: true
  print-linter-name: true
  # Make issues output unique by line.
  # Default: true
  uniq-by-line: true
  # Add a prefix to the output file references.
  # Default is no prefix.
  path-prefix: ""
  # Sort results by: filepath, line and column.
  sort-results: true

linters:
  disable-all: true
  enable:
    - asciicheck
    - bidichk
    - decorder
    - durationcheck
    - errcheck
    - errname
    - errorlint
    - exportloopref
    - godot
    - goconst
    - gocritic
    - gosimple
    - gosec
    - govet
    - gofumpt
    - gofmt
    - ineffassign
    - lll
    - makezero
    - misspell
    - nakedret
    - nilerr
    - prealloc
    - predeclared
    - revive
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - whitespace

    # enable complexity linters
    # - dupl
    # - gocognit
    # - gocyclo
    # - funlen

linters-settings:
  decorder:
    dec-order:
      - const
      - var
      - func
    disable-init-func-first-check: false
    disable-dec-order-check: true
  errorlint:
    # Check whether fmt.Errorf uses the %w verb for formatting errors. See the readme for caveats
    errorf: true
    # Check for plain type assertions and type switches
    asserts: true
    # Check for plain error comparisons
    comparison: true
  godot:
    # Comments to be checked: `declarations`, `toplevel`, or `all`.
    # Default: declarations
    scope: all
    # List of regexps for excluding particular comment lines from check.
    # Default: []
    exclude:
      # Exclude todo and fixme comments.
      - "(?i)^ FIXME:"
      - "(?i)^ TODO:"
      - "(?i)^ SPDX\\-License\\-Identifier:"
    # Check that each sentence ends with a period.
    # Default: true
    period: true
    # Check that each sentence starts with a capital letter.
    # Default: false
    capital: true
  goconst:
    # Minimal length of string constant.
    # Default: 3
    min-len: 3
    # Minimum occurrences of constant string count to trigger issue.
    # Default: 3
    min-occurrences: 10
  gosimple:
    go: "1.21"
    checks: [ "all" ]
  gosec:
    severity: "low"
    confidence: "low"
    excludes:
      - G101
      - G107
      - G112
      - G404
  gofumpt:
    # Choose whether to use the extra rules.
    # Default: false
    extra-rules: true
  gofmt:
    # Simplify code: gofmt with `-s` option.
    # Default: true
    simplify: true
    # Apply the rewrite rules to the source before reformatting.
    # https://pkg.go.dev/cmd/gofmt
    # Default: []
    rewrite-rules:
      - pattern: 'interface{}'
        replacement: 'any'
      - pattern: 'a[b:len(a)]'
        replacement: 'a[b:]'
  lll:
    # max line length, lines longer will be reported. Default is 120.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option
    line-length: 150
    # tab width in spaces. Default to 1.
    tab-width: 1
  makezero:
    always: false
  misspell:
    # Correct spellings using locale preferences for US or UK.
    # Default is to use a neutral variety of English.
    # Setting locale to US will correct the British spelling of 'colour' to 'color'.
    locale: US
  nakedret:
    max-func-lines: 60
  revive:
    rules:
      - name: var-naming
        disabled: true
        arguments:
          - [ "HTTP", "ID", "TLS", "TCP", "UDP", "API", "CA", "URL", "DNS" ]
  staticcheck:
    checks: [ "all", "-SA1019", "-SA2002", "-SA5008" ]
  stylecheck:
    checks: [ "all", "-ST1003" ]
  unparam:
    # Inspect exported functions, default is false. Set to true if no external program/library imports your code.
    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: false
  unused:
    # Mark all struct fields that have been written to as used.
    # Default: true
    field-writes-are-uses: true
    # Treat IncDec statement (e.g. `i++` or `i--`) as both read and write operation instead of just write.
    # Default: false
    post-statements-are-reads: true
    # Mark all exported identifiers as used.
    # Default: true
    exported-is-used: true
    # Mark all exported fields as used.
    # default: true
    exported-fields-are-used: true
    # Mark all function parameters as used.
    # default: true
    parameters-are-used: true
    # Mark all local variables as used.
    # default: true
    local-variables-are-used: true
    # Mark all identifiers inside generated files as used.
    # Default: true
    generated-is-used: true
  usestdlibvars:
    # Suggest the use of http.MethodXX
    # Default: true
    http-method: true
    # Suggest the use of http.StatusXX
    # Default: true
    http-status-code: true
    # Suggest the use of time.Weekday
    # Default: true
    time-weekday: true
    # Suggest the use of time.Month
    # Default: false
    time-month: true
    # Suggest the use of time.Layout
    # Default: false
    time-layout: true
    # Suggest the use of crypto.Hash
    # Default: false
    crypto-hash: true

issues:
  exclude-rules:
    - path: _test\.go
      linters:
        - errcheck
        - gosec
        - makezero
        - lll
