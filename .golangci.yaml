run:
  timeout: 10m
  tests: true
  allow-parallel-runners: true
  skip-files:
    - "doc.go"
  modules-download-mode: readonly
  skip-dirs:
    - pkg/dao/model

# output configuration options
output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  #
  # Multiple can be specified by separating them by comma, output can be provided
  # for each of them by separating format name and path by colon symbol.
  # Output path can be either `stdout`, `stderr` or path to the file to write to.
  # Example: "checkstyle:report.json,colored-line-number"
  #
  # Default: colored-line-number
  format: colored-line-number
  # Print lines of code with issue.
  # Default: true
  print-issued-lines: true
  # Print linter name in the end of issue text.
  # Default: true
  print-linter-name: true
  # Make issues output unique by line.
  # Default: true
  uniq-by-line: true
  # Add a prefix to the output file references.
  # Default is no prefix.
  path-prefix: ""
  # Sort results by: filepath, line and column.
  sort-results: true

linters:
  disable-all: true
  enable:
    - asciicheck
    - bidichk
    - bodyclose
    - decorder
    - durationcheck
    - errcheck
    - errname
    - errorlint
    - exportloopref
    - godot
    - goconst
    - gofumpt
    - goimports
    - gocritic
    - gosimple
    - gosec
    - govet
    - ineffassign
    - lll
    - makezero
    - misspell
    - misspell
    - nakedret
    - nilerr
    - nolintlint
    - prealloc
    - predeclared
    - revive
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - unused
    - usestdlibvars
    - whitespace
    - wsl

    # enable complexity linters
    # - dupl
    # - gocognit
    # - gocyclo
    # - funlen

linters-settings:
  staticcheck:
    checks: ["all", "-SA1019", "-SA2002"]
  stylecheck:
    checks: ["all", "-ST1003"]
  gosec:
    severity: "low"
    confidence: "low"
    excludes:
      - G101
      - G112
  revive:
    rules:
      - name: var-naming
        disabled: true
        arguments:
          - ["HTTP", "ID", "TLS", "TCP", "UDP", "API", "CA", "URL", "DNS"]
  godot:
    # Comments to be checked: `declarations`, `toplevel`, or `all`.
    # Default: declarations
    scope: all
    # List of regexps for excluding particular comment lines from check.
    # Default: []
    exclude:
      # Exclude todo and fixme comments.
      - "^fixme:"
      - "^todo:"
    # Check that each sentence ends with a period.
    # Default: true
    period: true
    # Check that each sentence starts with a capital letter.
    # Default: false
    capital: true
  lll:
    # max line length, lines longer will be reported. Default is 120.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option
    line-length: 120
    # tab width in spaces. Default to 1.
    tab-width: 4
  nolintlint:
    allow-unused: false
    allow-no-explanation: []
    require-explanation: false
    require-specific: true
  goconst:
    # Minimal length of string constant.
    # Default: 3
    min-len: 3
    # Minimum occurrences of constant string count to trigger issue.
    # Default: 3
    min-occurrences: 3
  goimports:
    # A comma-separated list of prefixes, which, if set, checks import paths
    # with the given prefixes are grouped after 3rd-party packages.
    # Default: ""
    local-prefixes: github.com/seal-io/seal
  misspell:
    # Correct spellings using locale preferences for US or UK.
    # Default is to use a neutral variety of English.
    # Setting locale to US will correct the British spelling of 'colour' to 'color'.
    locale: US
  unparam:
    # call graph construction algorithm (cha, rta). In general, use cha for libraries,
    # and rta for programs with main packages. Default is cha.
    algo: cha

    # Inspect exported functions, default is false. Set to true if no external program/library imports your code.
    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: false
  unused:
    # treat code as a program (not a library) and report unused exported identifiers; default is false.
    # XXX: if you enable this setting, unused will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find funcs usages. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: true
  wsl:
    # See https://github.com/bombsimon/wsl/blob/master/doc/configuration.md

    # If true append is only allowed to be cuddled if appending value is
    # matching variables, fields or types on line above. Default is true.
    strict-append: true
    # Allow calls and assignments to be cuddled as long as the lines have any
    # matching variables, fields or types. Default is true.
    allow-assign-and-call: true
    # Allow declarations (var) to be cuddled.
    allow-cuddle-declarations: false
    # Allow trailing comments in ending of blocks
    allow-trailing-comment: true
    # Allows assignments to be cuddled with anything. Default is false.
    allow-assign-and-anything: true
    # Force newlines in end of case at this limit (0 = never).
    force-case-trailing-whitespace: 0
    # Causes an error if a short declaration (:=) cuddles with anything other than
    # another short declaration.
    # This logic overrides force-err-cuddling among others.
    force-short-decl-cuddling: false
    force-err-cuddling: false
  errorlint:
    # Check whether fmt.Errorf uses the %w verb for formatting errors. See the readme for caveats
    errorf: true
    # Check for plain type assertions and type switches
    asserts: true
    # Check for plain error comparisons
    comparison: true
  makezero:
    always: false
  gosimple:
    go: "1.19"
    checks: ["all"]
  nakedret:
    max-func-lines: 60
  usestdlibvars:
    # Suggest the use of http.MethodXX
    # Default: true
    http-method: true
    # Suggest the use of http.StatusXX
    # Default: true
    http-status-code: true
    # Suggest the use of time.Weekday
    # Default: true
    time-weekday: true
    # Suggest the use of time.Month
    # Default: false
    time-month: true
    # Suggest the use of time.Layout
    # Default: false
    time-layout: true
    # Suggest the use of crypto.Hash
    # Default: false
    crypto-hash: true
  decorder:
    dec-order:
      - const
      - var
      - func
    disable-init-func-first-check: false
    disable-dec-order-check: true

issues:
  exclude-rules:
    - path: _test\.go
      linters:
        - errcheck
        - gosec
        - rowserrcheck
        - makezero
        - lll
        - funlen
        - wsl
