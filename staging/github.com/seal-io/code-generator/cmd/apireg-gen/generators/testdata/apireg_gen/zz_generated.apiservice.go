//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus". DO NOT EDIT.
package apireg_gen

import (
	"bytes"

	autoscalingv1 "k8s.io/api/autoscaling/v1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	rest "k8s.io/apiserver/pkg/registry/rest"
	apiregistrationv1 "k8s.io/kube-aggregator/pkg/apis/apiregistration/v1"
)

type (
	WithStatusSubResource interface {
		v1.ObjectMetaAccessor
		runtime.Object
		CopyStatusTo(runtime.Object)
	}

	WithScaleSubResource interface {
		v1.ObjectMetaAccessor
		runtime.Object
		GetScale() *autoscalingv1.Scale // TODO: Main struct needs to implement this.
		SetScale(*autoscalingv1.Scale)  // TODO: Main struct needs to implement this.
	}
)

func GetAPIService(svc apiregistrationv1.ServiceReference, ca []byte) *apiregistrationv1.APIService {
	return &apiregistrationv1.APIService{
		TypeMeta: v1.TypeMeta{
			APIVersion: "apiregistration.k8s.io/v1",
			Kind:       "APIService",
		},
		ObjectMeta: v1.ObjectMeta{
			Name: "v1.server.walrus.seal.io",
		},
		Spec: apiregistrationv1.APIServiceSpec{
			Service:               svc.DeepCopy(),
			Group:                 "server.walrus.seal.io",
			Version:               "v1",
			InsecureSkipTLSVerify: true,
			CABundle:              bytes.Clone(ca),
			GroupPriorityMinimum:  1000,
			VersionPriority:       100,
		},
	}
}

var _ rest.Scoper = (*Dummy)(nil)

func (*Dummy) NamespaceScoped() bool {
	return false
}

var _ rest.KindProvider = (*Dummy)(nil)

func (*Dummy) Kind() string {
	return "Dummy"
}

var _ rest.SingularNameProvider = (*Dummy)(nil)

func (*Dummy) GetSingularName() string {
	return "dummy"
}

var _ rest.ShortNamesProvider = (*Dummy)(nil)

func (*Dummy) ShortNames() []string {
	return []string{
		"proj",
	}
}

var _ rest.CategoriesProvider = (*Dummy)(nil)

func (*Dummy) Categories() []string {
	return []string{
		"all",
		"walrus",
	}
}

var _ WithStatusSubResource = (*Dummy)(nil)

func (in *Dummy) CopyStatusTo(out runtime.Object) {
	out.(*Dummy).Status = in.Status
}

var _ WithScaleSubResource = (*Dummy)(nil)

func (in *Dummy) GetScale() *autoscalingv1.Scale {
	// TODO: Move me to definition file
	return &autoscalingv1.Scale{}
}

func (in *Dummy) SetScale(s *autoscalingv1.Scale) {
	// TODO: Move me to definition file
}
